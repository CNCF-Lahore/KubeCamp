{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/socket.io-client/build/esm/contrib/backo2.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n",
      "start": 1708988592205,
      "end": 1708988592274,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708988592274,
      "end": 1708988592274,
      "order": "normal"
    }
  ]
}
