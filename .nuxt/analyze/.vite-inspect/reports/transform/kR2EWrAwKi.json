{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/elements/components/globals/Badge.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\nimport { renderSlot as _renderMDCSlot } from '/workspace/Kubernetes-Bootcamp/node_modules/@nuxtjs/mdc/dist/runtime/utils/slot'\n\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Badge',\n  props: {\n  /**\n   * @values info, success, warning, danger\n   */\n  type: {\n    type: String,\n    default: 'info',\n    validator (value: string) {\n      return ['info', 'success', 'warning', 'danger', 'primary'].includes(value)\n    }\n  }\n},\n  setup(__props) {\n\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_MDCSlot = _resolveComponent(\"MDCSlot\")!\n\n  return (_openBlock(), _createElementBlock(\"span\", {\n    class: _normalizeClass([[__props.type], \"badge\"])\n  }, [\n    _renderMDCSlot(_ctx.$slots, \"default\", { unwrap: \"p\" }, undefined, true)\n  ], 2))\n}\n}\n\n})",
      "start": 1708195451615,
      "end": 1708195451615
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708195451625,
      "end": 1708195451626,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708195451633,
      "end": 1708195451633,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\nimport { renderSlot as _renderMDCSlot } from '/workspace/Kubernetes-Bootcamp/node_modules/@nuxtjs/mdc/dist/runtime/utils/slot'\n\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Badge',\n  props: {\n  /**\n   * @values info, success, warning, danger\n   */\n  type: {\n    type: String,\n    default: 'info',\n    validator (value: string) {\n      return ['info', 'success', 'warning', 'danger', 'primary'].includes(value)\n    }\n  }\n},\n  setup(__props) {\n\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_MDCSlot = _resolveComponent(\"MDCSlot\")!\n\n  return (_openBlock(), _createElementBlock(\"span\", {\n    class: _normalizeClass([[__props.type], \"badge\"])\n  }, [\n    _renderMDCSlot(_ctx.$slots, \"default\", { unwrap: \"p\" }, undefined, true)\n  ], 2))\n}\n}\n\n})",
      "start": 1708195451644,
      "end": 1708195451644,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708195451644,
      "end": 1708195451644,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708195451645,
      "end": 1708195451645,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708195451645,
      "end": 1708195451645,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport { renderSlot as _renderMDCSlot } from \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxtjs/mdc/dist/runtime/utils/slot\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Badge\",\n  props: {\n    /**\n     * @values info, success, warning, danger\n     */\n    type: {\n      type: String,\n      default: \"info\",\n      validator(value) {\n        return [\"info\", \"success\", \"warning\", \"danger\", \"primary\"].includes(value);\n      }\n    }\n  },\n  setup(__props) {\n    return (_ctx, _cache) => {\n      const _component_MDCSlot = _resolveComponent(\"MDCSlot\");\n      return _openBlock(), _createElementBlock(\"span\", {\n        class: _normalizeClass([[__props.type], \"badge\"])\n      }, [\n        _renderMDCSlot(_ctx.$slots, \"default\", { unwrap: \"p\" }, void 0, true)\n      ], 2);\n    };\n  }\n});\n",
      "start": 1708195451645,
      "end": 1708195451858,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/elements/components/globals/Badge.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\nimport { renderSlot as _renderMDCSlot } from '/workspace/Kubernetes-Bootcamp/node_modules/@nuxtjs/mdc/dist/runtime/utils/slot'\n\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Badge',\n  props: {\n  /**\n   * @values info, success, warning, danger\n   */\n  type: {\n    type: String,\n    default: 'info',\n    validator (value: string) {\n      return ['info', 'success', 'warning', 'danger', 'primary'].includes(value)\n    }\n  }\n},\n  setup(__props) {\n\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_MDCSlot = _resolveComponent(\"MDCSlot\")!\n\n  return (_openBlock(), _createElementBlock(\"span\", {\n    class: _normalizeClass([[__props.type], \"badge\"])\n  }, [\n    _renderMDCSlot(_ctx.$slots, \"default\", { unwrap: \"p\" }, undefined, true)\n  ], 2))\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,oBAAoB,mBAA2E,kBAAkB,iBAAiB,aAAa,YAAY,sBAAsB,2BAA2B;AACrN,SAAS,cAAc,sBAAsB;AAI7C,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,OAAO;AAAA;AAAA;AAAA;AAAA,IAIP,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,UAAW,OAAe;AACxB,eAAO,CAAC,QAAQ,WAAW,WAAW,UAAU,SAAS,EAAE,SAAS,KAAK;AAAA,MAC3E;AAAA,IACF;AAAA,EACF;AAAA,EACE,MAAM,SAAS;AAIjB,WAAO,CAAC,MAAU,WAAgB;AAChC,YAAM,qBAAqB,kBAAkB,SAAS;AAEtD,aAAQ,WAAW,GAAG,oBAAoB,QAAQ;AAAA,QAChD,OAAO,gBAAgB,CAAC,CAAC,QAAQ,IAAI,GAAG,OAAO,CAAC;AAAA,MAClD,GAAG;AAAA,QACD,eAAe,KAAK,QAAQ,WAAW,EAAE,QAAQ,IAAI,GAAG,QAAW,IAAI;AAAA,MACzE,GAAG,CAAC;AAAA,IACN;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1708195451858,
      "end": 1708195451858,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708195451858,
      "end": 1708195451858,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708195451859,
      "end": 1708195451859,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708195451859,
      "end": 1708195451859,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708195451860,
      "end": 1708195451860,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708195451860,
      "end": 1708195451860,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708195451861,
      "end": 1708195451861,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708195451862,
      "end": 1708195451862,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708195451863,
      "end": 1708195451863,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708195451863,
      "end": 1708195451863,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708195451863,
      "end": 1708195451863,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708195451864,
      "end": 1708195451864,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708195451864,
      "end": 1708195451864,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708195451864,
      "end": 1708195451864,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708195451864,
      "end": 1708195451864,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708195451864,
      "end": 1708195451865,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708195451865,
      "end": 1708195451865,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708195451865,
      "end": 1708195451865,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708195451866,
      "end": 1708195451866,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708195451867,
      "end": 1708195451880,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708195451881,
      "end": 1708195451881,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708195451882,
      "end": 1708195451882,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708195451882,
      "end": 1708195451882,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708195451882,
      "end": 1708195451883,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxtjs/mdc/dist/runtime/components/MDCSlot\";\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport { renderSlot as _renderMDCSlot } from \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxtjs/mdc/dist/runtime/utils/slot\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"Badge\",\n  props: {\n    /**\n     * @values info, success, warning, danger\n     */\n    type: {\n      type: String,\n      default: \"info\",\n      validator(value) {\n        return [\"info\", \"success\", \"warning\", \"danger\", \"primary\"].includes(value);\n      }\n    }\n  },\n  setup(__props) {\n    return (_ctx, _cache) => {\n      const _component_MDCSlot = __nuxt_component_0;\n      return _openBlock(), _createElementBlock(\"span\", {\n        class: _normalizeClass([[__props.type], \"badge\"])\n      }, [\n        _renderMDCSlot(_ctx.$slots, \"default\", { unwrap: \"p\" }, void 0, true)\n      ], 2);\n    };\n  }\n});\n",
      "start": 1708195451883,
      "end": 1708195451884,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708195451885,
      "end": 1708195451891,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708195451891,
      "end": 1708195451891,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708195451891,
      "end": 1708195451891,
      "order": "normal"
    }
  ]
}
