{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/property-information/lib/util/create.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n",
      "start": 1708606103006,
      "end": 1708606103024,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708606103024,
      "end": 1708606103024,
      "order": "normal"
    }
  ]
}
