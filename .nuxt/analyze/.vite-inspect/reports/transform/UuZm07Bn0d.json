{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/property-information/lib/find.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n",
      "start": 1708283014265,
      "end": 1708283014406,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708283014406,
      "end": 1708283014406,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708283014406,
      "end": 1708283014406,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n",
      "start": 1708283014406,
      "end": 1708283014406,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708283014406,
      "end": 1708283014406,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708283014407,
      "end": 1708283014407,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708283014407,
      "end": 1708283014408,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708283014408,
      "end": 1708283014408,
      "order": "normal"
    }
  ]
}
