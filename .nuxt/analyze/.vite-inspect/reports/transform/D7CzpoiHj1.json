{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/@nuxthq/studio/dist/runtime/utils/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export * from \"./files.mjs\";\nexport const StudioConfigFiles = {\n  appConfig: \"app.config.ts\",\n  nuxtConfig: \"nuxt.config.ts\",\n  tokensConfig: \"tokens.config.ts\"\n};\nexport const createSingleton = (fn) => {\n  let instance;\n  return (_args) => {\n    if (!instance) {\n      instance = fn();\n    }\n    return instance;\n  };\n};\nexport function deepDelete(obj, newObj) {\n  for (const key in obj) {\n    const val = newObj[key];\n    if (!(key in newObj)) {\n      delete obj[key];\n    }\n    if (val !== null && typeof val === \"object\") {\n      deepDelete(obj[key], newObj[key]);\n    }\n  }\n}\nexport function deepAssign(obj, newObj) {\n  for (const key in newObj) {\n    const val = newObj[key];\n    if (val !== null && typeof val === \"object\") {\n      if (Array.isArray(val) && Array.isArray(obj[key])) {\n        obj[key] = val;\n      } else {\n        obj[key] = obj[key] || {};\n        deepAssign(obj[key], val);\n      }\n    } else {\n      obj[key] = val;\n    }\n  }\n}\n",
      "start": 1707500038027,
      "end": 1707500039122,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707500039122,
      "end": 1707500039122,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707500039122,
      "end": 1707500039122,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "export * from \"./files.mjs\";\nexport const StudioConfigFiles = {\n  appConfig: \"app.config.ts\",\n  nuxtConfig: \"nuxt.config.ts\",\n  tokensConfig: \"tokens.config.ts\"\n};\nexport const createSingleton = (fn) => {\n  let instance;\n  return (_args) => {\n    if (!instance) {\n      instance = fn();\n    }\n    return instance;\n  };\n};\nexport function deepDelete(obj, newObj) {\n  for (const key in obj) {\n    const val = newObj[key];\n    if (!(key in newObj)) {\n      delete obj[key];\n    }\n    if (val !== null && typeof val === \"object\") {\n      deepDelete(obj[key], newObj[key]);\n    }\n  }\n}\nexport function deepAssign(obj, newObj) {\n  for (const key in newObj) {\n    const val = newObj[key];\n    if (val !== null && typeof val === \"object\") {\n      if (Array.isArray(val) && Array.isArray(obj[key])) {\n        obj[key] = val;\n      } else {\n        obj[key] = obj[key] || {};\n        deepAssign(obj[key], val);\n      }\n    } else {\n      obj[key] = val;\n    }\n  }\n}\n",
      "start": 1707500039122,
      "end": 1707500039122,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1707500039122,
      "end": 1707500039122,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707500039122,
      "end": 1707500039123,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707500039123,
      "end": 1707500039123,
      "order": "normal"
    }
  ]
}
