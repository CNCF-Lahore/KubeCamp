{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/engine.io-client/build/esm/contrib/yeast.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n",
      "start": 1709041928612,
      "end": 1709041928625,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709041928625,
      "end": 1709041928625,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709041928626,
      "end": 1709041928626,
      "order": "normal"
    }
  ]
}
