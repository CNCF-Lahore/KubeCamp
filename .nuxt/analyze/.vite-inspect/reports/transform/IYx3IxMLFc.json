{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/socket.io-client/build/esm/url.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n",
      "start": 1708886637963,
      "end": 1708886638235,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708886638235,
      "end": 1708886638235,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708886638235,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708886638236,
      "end": 1708886638236,
      "order": "normal"
    }
  ]
}
