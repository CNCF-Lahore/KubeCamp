{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n",
      "start": 1708374876145,
      "end": 1708374876146,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708374876146,
      "end": 1708374876146,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708374876146,
      "end": 1708374876146,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n",
      "start": 1708374876146,
      "end": 1708374876146,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708374876146,
      "end": 1708374876146,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708374876146,
      "end": 1708374876146,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708374876146,
      "end": 1708374876146,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708374876146,
      "end": 1708374876146,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708374876146,
      "end": 1708374876146,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708374876146,
      "end": 1708374876146,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708374876146,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708374876147,
      "end": 1708374876147,
      "order": "normal"
    }
  ]
}
