{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/docus/components/app/ThemeSelect.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\"\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ThemeSelect',\n  setup(__props) {\n\nconst colorMode = useColorMode()\nconst onClick = () => {\n  const values = ['system', 'light', 'dark']\n  const index = values.indexOf(colorMode.preference)\n  const next = (index + 1) % values.length\n\n  colorMode.preference = values[next]\n}\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Icon = _resolveComponent(\"Icon\")!\n  const _component_ColorScheme = _resolveComponent(\"ColorScheme\")!\n\n  return (_openBlock(), _createElementBlock(\"button\", {\n    \"aria-label\": \"Color Mode\",\n    onClick: onClick\n  }, [\n    _createVNode(_component_ColorScheme, { placeholder: \"...\" }, {\n      default: _withCtx(() => [\n        (_unref(colorMode).preference === 'dark')\n          ? (_openBlock(), _createBlock(_component_Icon, {\n              key: 0,\n              name: \"uil:moon\"\n            }))\n          : (_unref(colorMode).preference === 'light')\n            ? (_openBlock(), _createBlock(_component_Icon, {\n                key: 1,\n                name: \"uil:sun\"\n              }))\n            : (_openBlock(), _createBlock(_component_Icon, {\n                key: 2,\n                name: \"uil:desktop\"\n              }))\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})",
      "start": 1708374871829,
      "end": 1708374871830
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708374871831,
      "end": 1708374871831,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708374871834,
      "end": 1708374871835,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\"\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ThemeSelect',\n  setup(__props) {\n\nconst colorMode = useColorMode()\nconst onClick = () => {\n  const values = ['system', 'light', 'dark']\n  const index = values.indexOf(colorMode.preference)\n  const next = (index + 1) % values.length\n\n  colorMode.preference = values[next]\n}\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Icon = _resolveComponent(\"Icon\")!\n  const _component_ColorScheme = _resolveComponent(\"ColorScheme\")!\n\n  return (_openBlock(), _createElementBlock(\"button\", {\n    \"aria-label\": \"Color Mode\",\n    onClick: onClick\n  }, [\n    _createVNode(_component_ColorScheme, { placeholder: \"...\" }, {\n      default: _withCtx(() => [\n        (_unref(colorMode).preference === 'dark')\n          ? (_openBlock(), _createBlock(_component_Icon, {\n              key: 0,\n              name: \"uil:moon\"\n            }))\n          : (_unref(colorMode).preference === 'light')\n            ? (_openBlock(), _createBlock(_component_Icon, {\n                key: 1,\n                name: \"uil:sun\"\n              }))\n            : (_openBlock(), _createBlock(_component_Icon, {\n                key: 2,\n                name: \"uil:desktop\"\n              }))\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})",
      "start": 1708374871835,
      "end": 1708374871835,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708374871836,
      "end": 1708374871836,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708374871837,
      "end": 1708374871837,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708374871837,
      "end": 1708374871837,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ThemeSelect\",\n  setup(__props) {\n    const colorMode = useColorMode();\n    const onClick = () => {\n      const values = [\"system\", \"light\", \"dark\"];\n      const index = values.indexOf(colorMode.preference);\n      const next = (index + 1) % values.length;\n      colorMode.preference = values[next];\n    };\n    return (_ctx, _cache) => {\n      const _component_Icon = _resolveComponent(\"Icon\");\n      const _component_ColorScheme = _resolveComponent(\"ColorScheme\");\n      return _openBlock(), _createElementBlock(\"button\", {\n        \"aria-label\": \"Color Mode\",\n        onClick\n      }, [\n        _createVNode(_component_ColorScheme, { placeholder: \"...\" }, {\n          default: _withCtx(() => [\n            _unref(colorMode).preference === \"dark\" ? (_openBlock(), _createBlock(_component_Icon, {\n              key: 0,\n              name: \"uil:moon\"\n            })) : _unref(colorMode).preference === \"light\" ? (_openBlock(), _createBlock(_component_Icon, {\n              key: 1,\n              name: \"uil:sun\"\n            })) : (_openBlock(), _createBlock(_component_Icon, {\n              key: 2,\n              name: \"uil:desktop\"\n            }))\n          ]),\n          _: 1\n        })\n      ]);\n    };\n  }\n});\n",
      "start": 1708374871837,
      "end": 1708374873119,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/docus/components/app/ThemeSelect.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\"\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ThemeSelect',\n  setup(__props) {\n\nconst colorMode = useColorMode()\nconst onClick = () => {\n  const values = ['system', 'light', 'dark']\n  const index = values.indexOf(colorMode.preference)\n  const next = (index + 1) % values.length\n\n  colorMode.preference = values[next]\n}\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Icon = _resolveComponent(\"Icon\")!\n  const _component_ColorScheme = _resolveComponent(\"ColorScheme\")!\n\n  return (_openBlock(), _createElementBlock(\"button\", {\n    \"aria-label\": \"Color Mode\",\n    onClick: onClick\n  }, [\n    _createVNode(_component_ColorScheme, { placeholder: \"...\" }, {\n      default: _withCtx(() => [\n        (_unref(colorMode).preference === 'dark')\n          ? (_openBlock(), _createBlock(_component_Icon, {\n              key: 0,\n              name: \"uil:moon\"\n            }))\n          : (_unref(colorMode).preference === 'light')\n            ? (_openBlock(), _createBlock(_component_Icon, {\n                key: 1,\n                name: \"uil:sun\"\n              }))\n            : (_openBlock(), _createBlock(_component_Icon, {\n                key: 2,\n                name: \"uil:desktop\"\n              }))\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,SAAS,QAAQ,oBAAoB,mBAAmB,aAAa,YAAY,eAAe,cAAyD,WAAW,UAAU,eAAe,cAAc,sBAAsB,2BAA2B;AAGrQ,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,MAAM,SAAS;AAEjB,UAAM,YAAY,aAAa;AAC/B,UAAM,UAAU,MAAM;AACpB,YAAM,SAAS,CAAC,UAAU,SAAS,MAAM;AACzC,YAAM,QAAQ,OAAO,QAAQ,UAAU,UAAU;AACjD,YAAM,QAAQ,QAAQ,KAAK,OAAO;AAElC,gBAAU,aAAa,OAAO,IAAI;AAAA,IACpC;AAEA,WAAO,CAAC,MAAU,WAAgB;AAChC,YAAM,kBAAkB,kBAAkB,MAAM;AAChD,YAAM,yBAAyB,kBAAkB,aAAa;AAE9D,aAAQ,WAAW,GAAG,oBAAoB,UAAU;AAAA,QAClD,cAAc;AAAA,QACd;AAAA,MACF,GAAG;AAAA,QACD,aAAa,wBAAwB,EAAE,aAAa,MAAM,GAAG;AAAA,UAC3D,SAAS,SAAS,MAAM;AAAA,YACrB,OAAO,SAAS,EAAE,eAAe,UAC7B,WAAW,GAAG,aAAa,iBAAiB;AAAA,cAC3C,KAAK;AAAA,cACL,MAAM;AAAA,YACR,CAAC,KACA,OAAO,SAAS,EAAE,eAAe,WAC/B,WAAW,GAAG,aAAa,iBAAiB;AAAA,cAC3C,KAAK;AAAA,cACL,MAAM;AAAA,YACR,CAAC,MACA,WAAW,GAAG,aAAa,iBAAiB;AAAA,cAC3C,KAAK;AAAA,cACL,MAAM;AAAA,YACR,CAAC;AAAA,UACT,CAAC;AAAA,UACD,GAAG;AAAA,QACL,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1708374873119,
      "end": 1708374873119,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708374873119,
      "end": 1708374873119,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708374873119,
      "end": 1708374873119,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708374873119,
      "end": 1708374873119,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708374873120,
      "end": 1708374873120,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708374873120,
      "end": 1708374873120,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708374873120,
      "end": 1708374873120,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708374873120,
      "end": 1708374873121,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708374873121,
      "end": 1708374873121,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708374873121,
      "end": 1708374873121,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708374873121,
      "end": 1708374873121,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708374873121,
      "end": 1708374873121,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708374873121,
      "end": 1708374873121,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708374873121,
      "end": 1708374873121,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708374873122,
      "end": 1708374873122,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708374873122,
      "end": 1708374873122,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708374873122,
      "end": 1708374873122,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708374873122,
      "end": 1708374873122,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708374873126,
      "end": 1708374873127,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useColorMode } from '/workspace/Kubernetes-Bootcamp/node_modules/@nuxtjs/color-mode/dist/runtime/composables';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ThemeSelect\",\n  setup(__props) {\n    const colorMode = useColorMode();\n    const onClick = () => {\n      const values = [\"system\", \"light\", \"dark\"];\n      const index = values.indexOf(colorMode.preference);\n      const next = (index + 1) % values.length;\n      colorMode.preference = values[next];\n    };\n    return (_ctx, _cache) => {\n      const _component_Icon = _resolveComponent(\"Icon\");\n      const _component_ColorScheme = _resolveComponent(\"ColorScheme\");\n      return _openBlock(), _createElementBlock(\"button\", {\n        \"aria-label\": \"Color Mode\",\n        onClick\n      }, [\n        _createVNode(_component_ColorScheme, { placeholder: \"...\" }, {\n          default: _withCtx(() => [\n            _unref(colorMode).preference === \"dark\" ? (_openBlock(), _createBlock(_component_Icon, {\n              key: 0,\n              name: \"uil:moon\"\n            })) : _unref(colorMode).preference === \"light\" ? (_openBlock(), _createBlock(_component_Icon, {\n              key: 1,\n              name: \"uil:sun\"\n            })) : (_openBlock(), _createBlock(_component_Icon, {\n              key: 2,\n              name: \"uil:desktop\"\n            }))\n          ]),\n          _: 1\n        })\n      ]);\n    };\n  }\n});\n",
      "start": 1708374873127,
      "end": 1708374873141,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingshO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1708374873141,
      "end": 1708374873141,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708374873141,
      "end": 1708374873141,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708374873141,
      "end": 1708374873141,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708374873141,
      "end": 1708374873141,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/workspace/Kubernetes-Bootcamp/node_modules/nuxt-icon/dist/runtime/Icon.vue\";\nimport { default as __nuxt_component_1 } from \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxtjs/color-mode/dist/runtime/component.vue3.vue\";\nimport { useColorMode } from '/workspace/Kubernetes-Bootcamp/node_modules/@nuxtjs/color-mode/dist/runtime/composables';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ThemeSelect\",\n  setup(__props) {\n    const colorMode = useColorMode();\n    const onClick = () => {\n      const values = [\"system\", \"light\", \"dark\"];\n      const index = values.indexOf(colorMode.preference);\n      const next = (index + 1) % values.length;\n      colorMode.preference = values[next];\n    };\n    return (_ctx, _cache) => {\n      const _component_Icon = __nuxt_component_0;\n      const _component_ColorScheme = __nuxt_component_1;\n      return _openBlock(), _createElementBlock(\"button\", {\n        \"aria-label\": \"Color Mode\",\n        onClick\n      }, [\n        _createVNode(_component_ColorScheme, { placeholder: \"...\" }, {\n          default: _withCtx(() => [\n            _unref(colorMode).preference === \"dark\" ? (_openBlock(), _createBlock(_component_Icon, {\n              key: 0,\n              name: \"uil:moon\"\n            })) : _unref(colorMode).preference === \"light\" ? (_openBlock(), _createBlock(_component_Icon, {\n              key: 1,\n              name: \"uil:sun\"\n            })) : (_openBlock(), _createBlock(_component_Icon, {\n              key: 2,\n              name: \"uil:desktop\"\n            }))\n          ]),\n          _: 1\n        })\n      ]);\n    };\n  }\n});\n",
      "start": 1708374873142,
      "end": 1708374873142,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708374873143,
      "end": 1708374873143,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708374873143,
      "end": 1708374873143,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708374873143,
      "end": 1708374873143,
      "order": "normal"
    }
  ]
}
