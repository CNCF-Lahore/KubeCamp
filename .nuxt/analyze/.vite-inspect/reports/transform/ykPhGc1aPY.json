{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/nuxt-icon/dist/runtime/IconCSS.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { useCssVars as _useCssVars, defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport type { PropType } from 'vue'\nimport { useAppConfig, computed } from '#imports'\n\ntype AliasesKeys = keyof typeof aliases\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'IconCSS',\n  props: {\n  name: {\n    type: String as PropType<AliasesKeys | (string & {})>,\n    required: true\n  },\n  size: {\n    type: String,\n    default: ''\n  }\n},\n  setup(__props) {\n\n_useCssVars(_ctx => ({\n  \"faa288c6\": (_unref(iconUrl))\n}))\n\nconst appConfig = useAppConfig()\nconst aliases = appConfig?.nuxtIcon?.aliases || {}\n\nconst props = __props\n\nconst iconName = computed(() => ((appConfig as any)?.nuxtIcon?.aliases || {})[props.name] || props.name)\nconst iconUrl = computed(() => `url('https://api.iconify.design/${iconName.value.replace(':', '/')}.svg')`)\nconst sSize = computed(() => {\n  // Disable size if appConfig.nuxtIcon.size === false\n  if (!props.size && typeof appConfig.nuxtIcon?.size === 'boolean' && !appConfig.nuxtIcon?.size) {\n    return undefined\n  }\n  const size = props.size || appConfig.nuxtIcon?.size || '1em'\n  if (String(Number(size)) === size) {\n    return `${size}px`\n  }\n  return size\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"span\", {\n    style: _normalizeStyle({ width: _unref(sSize), height: _unref(sSize) })\n  }, null, 4))\n}\n}\n\n})",
      "start": 1707165957400,
      "end": 1707165957400
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707165957400,
      "end": 1707165957400,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707165957400,
      "end": 1707165957400,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "import { useCssVars as _useCssVars, defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport type { PropType } from 'vue'\nimport { useAppConfig, computed } from '#imports'\n\ntype AliasesKeys = keyof typeof aliases\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'IconCSS',\n  props: {\n  name: {\n    type: String as PropType<AliasesKeys | (string & {})>,\n    required: true\n  },\n  size: {\n    type: String,\n    default: ''\n  }\n},\n  setup(__props) {\n\n_useCssVars(_ctx => ({\n  \"faa288c6\": (_unref(iconUrl))\n}))\n\nconst appConfig = useAppConfig()\nconst aliases = appConfig?.nuxtIcon?.aliases || {}\n\nconst props = __props\n\nconst iconName = computed(() => ((appConfig as any)?.nuxtIcon?.aliases || {})[props.name] || props.name)\nconst iconUrl = computed(() => `url('https://api.iconify.design/${iconName.value.replace(':', '/')}.svg')`)\nconst sSize = computed(() => {\n  // Disable size if appConfig.nuxtIcon.size === false\n  if (!props.size && typeof appConfig.nuxtIcon?.size === 'boolean' && !appConfig.nuxtIcon?.size) {\n    return undefined\n  }\n  const size = props.size || appConfig.nuxtIcon?.size || '1em'\n  if (String(Number(size)) === size) {\n    return `${size}px`\n  }\n  return size\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"span\", {\n    style: _normalizeStyle({ width: _unref(sSize), height: _unref(sSize) })\n  }, null, 4))\n}\n}\n\n})",
      "start": 1707165957401,
      "end": 1707165957401,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1707165957401,
      "end": 1707165957401,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707165957401,
      "end": 1707165957401,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707165957401,
      "end": 1707165957401,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { useCssVars as _useCssVars, defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport { useAppConfig, computed } from \"#imports\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"IconCSS\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    size: {\n      type: String,\n      default: \"\"\n    }\n  },\n  setup(__props) {\n    _useCssVars((_ctx) => ({\n      \"faa288c6\": _unref(iconUrl)\n    }));\n    const appConfig = useAppConfig();\n    const aliases = appConfig?.nuxtIcon?.aliases || {};\n    const props = __props;\n    const iconName = computed(() => (appConfig?.nuxtIcon?.aliases || {})[props.name] || props.name);\n    const iconUrl = computed(() => `url('https://api.iconify.design/${iconName.value.replace(\":\", \"/\")}.svg')`);\n    const sSize = computed(() => {\n      if (!props.size && typeof appConfig.nuxtIcon?.size === \"boolean\" && !appConfig.nuxtIcon?.size) {\n        return void 0;\n      }\n      const size = props.size || appConfig.nuxtIcon?.size || \"1em\";\n      if (String(Number(size)) === size) {\n        return `${size}px`;\n      }\n      return size;\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        style: _normalizeStyle({ width: _unref(sSize), height: _unref(sSize) })\n      }, null, 4);\n    };\n  }\n});\n",
      "start": 1707165957401,
      "end": 1707165957484,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/workspace/Kubernetes-Bootcamp/node_modules/nuxt-icon/dist/runtime/IconCSS.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { useCssVars as _useCssVars, defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport type { PropType } from 'vue'\nimport { useAppConfig, computed } from '#imports'\n\ntype AliasesKeys = keyof typeof aliases\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'IconCSS',\n  props: {\n  name: {\n    type: String as PropType<AliasesKeys | (string & {})>,\n    required: true\n  },\n  size: {\n    type: String,\n    default: ''\n  }\n},\n  setup(__props) {\n\n_useCssVars(_ctx => ({\n  \"faa288c6\": (_unref(iconUrl))\n}))\n\nconst appConfig = useAppConfig()\nconst aliases = appConfig?.nuxtIcon?.aliases || {}\n\nconst props = __props\n\nconst iconName = computed(() => ((appConfig as any)?.nuxtIcon?.aliases || {})[props.name] || props.name)\nconst iconUrl = computed(() => `url('https://api.iconify.design/${iconName.value.replace(':', '/')}.svg')`)\nconst sSize = computed(() => {\n  // Disable size if appConfig.nuxtIcon.size === false\n  if (!props.size && typeof appConfig.nuxtIcon?.size === 'boolean' && !appConfig.nuxtIcon?.size) {\n    return undefined\n  }\n  const size = props.size || appConfig.nuxtIcon?.size || '1em'\n  if (String(Number(size)) === size) {\n    return `${size}px`\n  }\n  return size\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"span\", {\n    style: _normalizeStyle({ width: _unref(sSize), height: _unref(sSize) })\n  }, null, 4))\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,cAAc,aAAa,mBAAmB,wBAAwB;AAC/E,SAAS,SAAS,QAAQ,kBAAkB,iBAAiB,aAAa,YAAY,sBAAsB,2BAA2B;AAGvI,SAAS,cAAc,gBAAgB;AAKvC,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,OAAO;AAAA,IACP,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACE,MAAM,SAAS;AAEjB,gBAAY,WAAS;AAAA,MACnB,YAAa,OAAO,OAAO;AAAA,IAC7B,EAAE;AAEF,UAAM,YAAY,aAAa;AAC/B,UAAM,UAAU,WAAW,UAAU,WAAW,CAAC;AAEjD,UAAM,QAAQ;AAEd,UAAM,WAAW,SAAS,OAAQ,WAAmB,UAAU,WAAW,CAAC,GAAG,MAAM,IAAI,KAAK,MAAM,IAAI;AACvG,UAAM,UAAU,SAAS,MAAM,mCAAmC,SAAS,MAAM,QAAQ,KAAK,GAAG,CAAC,QAAQ;AAC1G,UAAM,QAAQ,SAAS,MAAM;AAE3B,UAAI,CAAC,MAAM,QAAQ,OAAO,UAAU,UAAU,SAAS,aAAa,CAAC,UAAU,UAAU,MAAM;AAC7F,eAAO;AAAA,MACT;AACA,YAAM,OAAO,MAAM,QAAQ,UAAU,UAAU,QAAQ;AACvD,UAAI,OAAO,OAAO,IAAI,CAAC,MAAM,MAAM;AACjC,eAAO,GAAG,IAAI;AAAA,MAChB;AACA,aAAO;AAAA,IACT,CAAC;AAED,WAAO,CAAC,MAAU,WAAgB;AAChC,aAAQ,WAAW,GAAG,oBAAoB,QAAQ;AAAA,QAChD,OAAO,gBAAgB,EAAE,OAAO,OAAO,KAAK,GAAG,QAAQ,OAAO,KAAK,EAAE,CAAC;AAAA,MACxE,GAAG,MAAM,CAAC;AAAA,IACZ;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1707165957484,
      "end": 1707165957484,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707165957484,
      "end": 1707165957484,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707165957484,
      "end": 1707165957484,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707165957484,
      "end": 1707165957484,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707165957484,
      "end": 1707165957485,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707165957486,
      "end": 1707165957486,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707165957486,
      "end": 1707165957486,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707165957486,
      "end": 1707165957486,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707165957486,
      "end": 1707165957486,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707165957487,
      "end": 1707165957487,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707165957489,
      "end": 1707165957489,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707165957489,
      "end": 1707165957489,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707165957489,
      "end": 1707165957489,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707165957489,
      "end": 1707165957489,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707165957490,
      "end": 1707165957490,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707165957490,
      "end": 1707165957490,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707165957490,
      "end": 1707165957490,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707165957490,
      "end": 1707165957490,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707165957491,
      "end": 1707165957491,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useAppConfig } from '#app/config';\nimport { computed } from 'vue';\nimport { useCssVars as _useCssVars, defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"IconCSS\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    size: {\n      type: String,\n      default: \"\"\n    }\n  },\n  setup(__props) {\n    _useCssVars((_ctx) => ({\n      \"faa288c6\": _unref(iconUrl)\n    }));\n    const appConfig = useAppConfig();\n    const aliases = appConfig?.nuxtIcon?.aliases || {};\n    const props = __props;\n    const iconName = computed(() => (appConfig?.nuxtIcon?.aliases || {})[props.name] || props.name);\n    const iconUrl = computed(() => `url('https://api.iconify.design/${iconName.value.replace(\":\", \"/\")}.svg')`);\n    const sSize = computed(() => {\n      if (!props.size && typeof appConfig.nuxtIcon?.size === \"boolean\" && !appConfig.nuxtIcon?.size) {\n        return void 0;\n      }\n      const size = props.size || appConfig.nuxtIcon?.size || \"1em\";\n      if (String(Number(size)) === size) {\n        return `${size}px`;\n      }\n      return size;\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        style: _normalizeStyle({ width: _unref(sSize), height: _unref(sSize) })\n      }, null, 4);\n    };\n  }\n});\n",
      "start": 1707165957492,
      "end": 1707165957495,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvphH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACltG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1707165957495,
      "end": 1707165957495,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707165957495,
      "end": 1707165957495,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707165957495,
      "end": 1707165957495,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707165957495,
      "end": 1707165957495,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707165957495,
      "end": 1707165957495,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707165957496,
      "end": 1707165957496,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707165957496,
      "end": 1707165957496,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707165957496,
      "end": 1707165957496,
      "order": "normal"
    }
  ]
}
