{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/socket.io-parser/build/esm/is-binary.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n",
      "start": 1708283014431,
      "end": 1708283014461,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708283014461,
      "end": 1708283014461,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708283014461,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708283014462,
      "end": 1708283014462,
      "order": "normal"
    }
  ]
}
