{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/@nuxthq/studio/dist/runtime/components/ContentPreviewMode.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup lang=\"ts\">\nimport { onMounted, ref, onUnmounted, Transition } from 'vue'\nimport type { Socket } from 'socket.io-client'\nimport { useCookie, useRoute, useNuxtApp, useRouter } from '#app'\nimport type { PreviewResponse } from '../types'\n\nconst props = defineProps({\n  previewToken: {\n    type: String,\n    required: true\n  },\n  apiURL: {\n    type: String,\n    required: true\n  },\n  syncPreview: {\n    type: Function,\n    required: true\n  },\n  requestPreviewSyncAPI: {\n    type: Function,\n    required: true\n  }\n})\n\nconst previewClasses = ['__nuxt_preview', '__preview_enabled']\n\nconst nuxtApp = useNuxtApp()\nconst router = useRouter()\nconst open = ref(true)\nconst refreshing = ref(false)\nconst previewReady = ref(false)\nconst error = ref('')\nlet socket: Socket\n\nconst closePreviewMode = async () => {\n  // Remove preview token from cookie and session storage\n  useCookie('previewToken').value = ''\n  window.sessionStorage.removeItem('previewToken')\n\n  // Remove query params in url to refresh page\n  await router.replace({ query: { preview: undefined } })\n\n  // Reload page to fully exit preview mode\n  window.location.reload()\n}\n\nconst sync = async (data: PreviewResponse) => {\n  const isUpdated = await props.syncPreview(data)\n\n  if (previewReady.value === true) {\n    // Preview already ready, no need to sync again\n    return\n  }\n\n  // If data is not updated, it means the storage is not ready yet and we should try again\n  if (!isUpdated) {\n    setTimeout(() => sync(data), 1000)\n    return\n  }\n\n  // Ensure that preview token is set in cookie\n  // This is needed for cases that user wants to exit preview mode before preview is ready\n  if (!useCookie('previewToken').value) {\n    return\n  }\n\n  previewReady.value = true\n  // Remove query params in url to refresh page (in case of 404 with no SPA fallback)\n  await router.replace({ query: {} })\n\n  // @ts-ignore\n  nuxtApp.callHook('nuxt-studio:preview:ready')\n\n  if (window.parent && window.self !== window.parent) {\n    socket.disconnect()\n  }\n}\n\nonMounted(async () => {\n  const io = await import('socket.io-client')\n  socket = io.connect(`${props.apiURL}/preview`, {\n    transports: ['websocket', 'polling'],\n    auth: {\n      token: props.previewToken\n    }\n  })\n\n  let syncTimeout: ReturnType<typeof setTimeout> | null\n  socket.on('connect', () => {\n    syncTimeout = setTimeout(() => {\n      if (!previewReady.value) {\n        syncTimeout = setTimeout(() => {\n          error.value = 'Preview sync timed out'\n          previewReady.value = false\n        }, 30000)\n\n        socket.emit('draft:requestSync')\n      }\n    }, 30000)\n  })\n\n  const clearSyncTimeout = () => {\n    if (syncTimeout) {\n      clearTimeout(syncTimeout)\n      syncTimeout = null\n    }\n  }\n\n  // Client should receive draft:sync event on connect\n  socket.on('draft:sync', async (data) => {\n    clearSyncTimeout()\n\n    // If no data is received, it means the draft is not ready yet\n    if (!data) {\n      // Call init to request draft sync via api\n      try {\n        // Wait for draft:ready and then request sync\n        socket.once('draft:ready', () => {\n          socket.emit('draft:requestSync')\n        })\n\n        await props.requestPreviewSyncAPI()\n      } catch (e: any) {\n        clearSyncTimeout()\n\n        switch (e.response.status) {\n          case 404:\n            error.value = 'Preview draft not found'\n            previewReady.value = false\n            break\n          default:\n            error.value = 'An error occurred while syncing preview'\n            previewReady.value = false\n        }\n      }\n      return\n    }\n\n    sync(data)\n  })\n\n  socket.on('draft:unauthorized', () => {\n    clearSyncTimeout()\n    error.value = 'Unauthorized preview token'\n    previewReady.value = false\n  })\n  socket.on('disconnect', () => {\n    clearSyncTimeout()\n  })\n\n  // Adds body classes for live preview\n  document.body.classList.add(...previewClasses)\n\n  socket.on('draft:update', (data) => {\n    refreshing.value = true\n    props.syncPreview(data)\n    refreshing.value = false\n  })\n})\n\n// Also cleans up body classes on unMounted\nonUnmounted(() => {\n  document.body.classList.remove(...previewClasses)\n})\n</script>\n\n<template>\n  <div>\n    <div\n      v-if=\"open\"\n      id=\"__nuxt_preview\"\n      :class=\"{ __preview_ready: previewReady, __preview_refreshing: refreshing }\"\n    >\n      <template v-if=\"previewReady\">\n        <svg\n          viewBox=\"0 0 90 90\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M50.0016 71.0999h29.2561c.9293.0001 1.8422-.241 2.6469-.6992.8047-.4582 1.4729-1.1173 1.9373-1.9109.4645-.7936.7088-1.6939.7083-2.6102-.0004-.9162-.2455-1.8163-.7106-2.6095L64.192 29.713c-.4644-.7934-1.1325-1.4523-1.937-1.9105-.8046-.4581-1.7173-.6993-2.6463-.6993-.9291 0-1.8418.2412-2.6463.6993-.8046.4582-1.4726 1.1171-1.937 1.9105l-5.0238 8.5861-9.8224-16.7898c-.4648-.7934-1.1332-1.4522-1.938-1.9102-.8047-.4581-1.7176-.6992-2.6468-.6992-.9292 0-1.842.2411-2.6468.6992-.8048.458-1.4731 1.1168-1.9379 1.9102L6.56062 63.2701c-.46512.7932-.71021 1.6933-.71061 2.6095-.00041.9163.24389 1.8166.70831 2.6102.46443.7936 1.1326 1.4527 1.93732 1.9109.80473.4582 1.71766.6993 2.64686.6992h18.3646c7.2763 0 12.6422-3.1516 16.3345-9.3002l8.9642-15.3081 4.8015-8.1925 14.4099 24.6083H54.8058l-4.8042 8.1925ZM29.2077 62.899l-12.8161-.0028L35.603 30.0869l9.5857 16.4047-6.418 10.9645c-2.4521 3.9894-5.2377 5.4429-9.563 5.4429Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n        <span><a\n          href=\"https://nuxt.studio\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >Nuxt Studio</a>: Preview enabled</span>\n        <button @click=\"closePreviewMode\">\n          Close\n        </button>\n      </template>\n    </div>\n    <Transition name=\"preview-loading\">\n      <div v-if=\"open && !previewReady && !error\">\n        <div id=\"__preview_background\" />\n        <div id=\"__preview_loader\">\n          <svg\n            id=\"__preview_loading_icon\"\n            width=\"32\"\n            height=\"32\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 0 0 4.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 0 1-15.357-2m15.357 2H15\"\n            />\n          </svg>\n          <p>Initializing the preview...</p>\n          <button @click=\"closePreviewMode\">\n            Cancel\n          </button>\n        </div>\n      </div>\n    </Transition>\n    <Transition name=\"preview-loading\">\n      <div v-if=\"error\">\n        <div id=\"__preview_background\" />\n        <div id=\"__preview_loader\">\n          <p>{{ error }}</p>\n          <button @click=\"closePreviewMode\">\n            Exit preview\n          </button>\n        </div>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<style>\nbody.__preview_enabled{padding-bottom:50px}\n</style>\n\n<style scoped>\n#__nuxt_preview {\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-family: Helvetica, sans-serif;\n  font-weight: 500;\n  position: fixed;\n  bottom: -60px;\n  left: 0;\n  right: 0;\n  background: rgba(255, 255, 255, 0.3);\n  color: black;\n  backdrop-filter: blur(20px);\n  border-top: 1px #eee solid;\n  transition: bottom 0.3s ease-in-out;\n  font-size: 16px;\n  z-index: 10000;\n}\n#__nuxt_preview.__preview_ready {\n  bottom: 0;\n}\n\n#__preview_background {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 9000;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(8px);\n}\n\n#__preview_loader {\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 1.4rem;\n  z-index: 9500;\n  color: black;\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n#__preview_loader p {\n  margin: 10px 0;\n}\n\n.dark #__preview_background,\n.dark-mode #__preview_background {\n  background: rgba(0, 0, 0, 0.3);\n}\n.dark #__preview_loader,\n.dark-mode #__preview_loader {\n  color: white;\n}\n\n.preview-loading-enter-active,\n.preview-loading-leave-active {\n  transition: opacity 0.4s;\n}\n.preview-loading-enter,\n.preview-loading-leave-to {\n  opacity: 0;\n}\n\n#__preview_loading_icon {\n  animation: spin 1s linear infinite;\n}\n\n.dark #__nuxt_preview,\n.dark-mode #__nuxt_preview {\n  background: rgba(0, 0, 0, 0.3);\n  border-top: 1px #111 solid;\n  color: white;\n}\n#__nuxt_preview svg {\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  color: black;\n}\n.dark #__nuxt_preview svg,\n.dark-mode #__nuxt_preview svg {\n  color: white;\n}\nbutton {\n  cursor: pointer;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 4px 10px;\n  border-radius: 3px;\n  background: transparent;\n  margin-left: 5px;\n  margin-right: 8px;\n  color: rgba(0, 0, 0, 0.8);\n  font-size: 14px;\n  line-height: 1rem;\n  transition: none;\n  text-align: center;\n  font-weight: normal;\n  box-shadow: none;\n  display: inline-block;\n  width: auto;\n  margin: 0;\n}\nbutton:hover {\n  color: rgba(0, 0, 0, 0.9);\n  border-color: rgba(0, 0, 0, 0.4);\n}\n.dark-mode button,\n.dark button {\n  color: lightgray;\n  border-color: rgba(255, 255, 255, 0.2)\n}\n.dark-mode button:hover,\n.dark button:hover {\n  color: white;\n  border-color: rgba(255, 255, 255, 0.4)\n}\n#__nuxt_preview button:hover,\n#__nuxt_preview button:focus {\n  background: rgba(0, 0, 0, 0.1);\n}\n#__nuxt_preview button:active {\n  background: rgba(0, 0, 0, 0.2);\n}\n.dark #__nuxt_preview button,\n.dark-mode #__nuxt_preview button {\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: rgba(255, 255, 255, 0.8);\n}\n.dark #__nuxt_preview button:hover,\n.dark #__nuxt_preview button:hover,\n.dark-mode #__nuxt_preview button:focus,\n.dark-mode #__nuxt_preview button:focus {\n  background: rgba(255, 255, 255, 0.1);\n}\n.dark #__nuxt_preview button:active,\n.dark-mode #__nuxt_preview button:active {\n  background: rgba(255, 255, 255, 0.2);\n}\n\na {\n  font-weight: 600;\n}\n#__nuxt_preview.__preview_refreshing svg,\n#__nuxt_preview.__preview_refreshing span,\n#__nuxt_preview.__preview_refreshing button {\n  animation: nuxt_pulsate 1s ease-out;\n  animation-iteration-count: infinite;\n  opacity: 0.5;\n}\n@keyframes nuxt_pulsate {\n  0% {\n      opacity: 1;\n  }\n  50% {\n      opacity: 0.5;\n  }\n  100% {\n      opacity: 1;\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(360deg);\n  }\n  100% {\n    transform: rotate(0deg);\n  }\n}\n</style>\n",
      "start": 1707665595597,
      "end": 1707665596750,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707665596750,
      "end": 1707665596750,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707665596750,
      "end": 1707665596750,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "<script setup lang=\"ts\">\nimport { onMounted, ref, onUnmounted, Transition } from 'vue'\nimport type { Socket } from 'socket.io-client'\nimport { useCookie, useRoute, useNuxtApp, useRouter } from '#app'\nimport type { PreviewResponse } from '../types'\n\nconst props = defineProps({\n  previewToken: {\n    type: String,\n    required: true\n  },\n  apiURL: {\n    type: String,\n    required: true\n  },\n  syncPreview: {\n    type: Function,\n    required: true\n  },\n  requestPreviewSyncAPI: {\n    type: Function,\n    required: true\n  }\n})\n\nconst previewClasses = ['__nuxt_preview', '__preview_enabled']\n\nconst nuxtApp = useNuxtApp()\nconst router = useRouter()\nconst open = ref(true)\nconst refreshing = ref(false)\nconst previewReady = ref(false)\nconst error = ref('')\nlet socket: Socket\n\nconst closePreviewMode = async () => {\n  // Remove preview token from cookie and session storage\n  useCookie('previewToken').value = ''\n  window.sessionStorage.removeItem('previewToken')\n\n  // Remove query params in url to refresh page\n  await router.replace({ query: { preview: undefined } })\n\n  // Reload page to fully exit preview mode\n  window.location.reload()\n}\n\nconst sync = async (data: PreviewResponse) => {\n  const isUpdated = await props.syncPreview(data)\n\n  if (previewReady.value === true) {\n    // Preview already ready, no need to sync again\n    return\n  }\n\n  // If data is not updated, it means the storage is not ready yet and we should try again\n  if (!isUpdated) {\n    setTimeout(() => sync(data), 1000)\n    return\n  }\n\n  // Ensure that preview token is set in cookie\n  // This is needed for cases that user wants to exit preview mode before preview is ready\n  if (!useCookie('previewToken').value) {\n    return\n  }\n\n  previewReady.value = true\n  // Remove query params in url to refresh page (in case of 404 with no SPA fallback)\n  await router.replace({ query: {} })\n\n  // @ts-ignore\n  nuxtApp.callHook('nuxt-studio:preview:ready')\n\n  if (window.parent && window.self !== window.parent) {\n    socket.disconnect()\n  }\n}\n\nonMounted(async () => {\n  const io = await import('socket.io-client')\n  socket = io.connect(`${props.apiURL}/preview`, {\n    transports: ['websocket', 'polling'],\n    auth: {\n      token: props.previewToken\n    }\n  })\n\n  let syncTimeout: ReturnType<typeof setTimeout> | null\n  socket.on('connect', () => {\n    syncTimeout = setTimeout(() => {\n      if (!previewReady.value) {\n        syncTimeout = setTimeout(() => {\n          error.value = 'Preview sync timed out'\n          previewReady.value = false\n        }, 30000)\n\n        socket.emit('draft:requestSync')\n      }\n    }, 30000)\n  })\n\n  const clearSyncTimeout = () => {\n    if (syncTimeout) {\n      clearTimeout(syncTimeout)\n      syncTimeout = null\n    }\n  }\n\n  // Client should receive draft:sync event on connect\n  socket.on('draft:sync', async (data) => {\n    clearSyncTimeout()\n\n    // If no data is received, it means the draft is not ready yet\n    if (!data) {\n      // Call init to request draft sync via api\n      try {\n        // Wait for draft:ready and then request sync\n        socket.once('draft:ready', () => {\n          socket.emit('draft:requestSync')\n        })\n\n        await props.requestPreviewSyncAPI()\n      } catch (e: any) {\n        clearSyncTimeout()\n\n        switch (e.response.status) {\n          case 404:\n            error.value = 'Preview draft not found'\n            previewReady.value = false\n            break\n          default:\n            error.value = 'An error occurred while syncing preview'\n            previewReady.value = false\n        }\n      }\n      return\n    }\n\n    sync(data)\n  })\n\n  socket.on('draft:unauthorized', () => {\n    clearSyncTimeout()\n    error.value = 'Unauthorized preview token'\n    previewReady.value = false\n  })\n  socket.on('disconnect', () => {\n    clearSyncTimeout()\n  })\n\n  // Adds body classes for live preview\n  document.body.classList.add(...previewClasses)\n\n  socket.on('draft:update', (data) => {\n    refreshing.value = true\n    props.syncPreview(data)\n    refreshing.value = false\n  })\n})\n\n// Also cleans up body classes on unMounted\nonUnmounted(() => {\n  document.body.classList.remove(...previewClasses)\n})\n</script>\n\n<template>\n  <div>\n    <div\n      v-if=\"open\"\n      id=\"__nuxt_preview\"\n      :class=\"{ __preview_ready: previewReady, __preview_refreshing: refreshing }\"\n    >\n      <template v-if=\"previewReady\">\n        <svg\n          viewBox=\"0 0 90 90\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M50.0016 71.0999h29.2561c.9293.0001 1.8422-.241 2.6469-.6992.8047-.4582 1.4729-1.1173 1.9373-1.9109.4645-.7936.7088-1.6939.7083-2.6102-.0004-.9162-.2455-1.8163-.7106-2.6095L64.192 29.713c-.4644-.7934-1.1325-1.4523-1.937-1.9105-.8046-.4581-1.7173-.6993-2.6463-.6993-.9291 0-1.8418.2412-2.6463.6993-.8046.4582-1.4726 1.1171-1.937 1.9105l-5.0238 8.5861-9.8224-16.7898c-.4648-.7934-1.1332-1.4522-1.938-1.9102-.8047-.4581-1.7176-.6992-2.6468-.6992-.9292 0-1.842.2411-2.6468.6992-.8048.458-1.4731 1.1168-1.9379 1.9102L6.56062 63.2701c-.46512.7932-.71021 1.6933-.71061 2.6095-.00041.9163.24389 1.8166.70831 2.6102.46443.7936 1.1326 1.4527 1.93732 1.9109.80473.4582 1.71766.6993 2.64686.6992h18.3646c7.2763 0 12.6422-3.1516 16.3345-9.3002l8.9642-15.3081 4.8015-8.1925 14.4099 24.6083H54.8058l-4.8042 8.1925ZM29.2077 62.899l-12.8161-.0028L35.603 30.0869l9.5857 16.4047-6.418 10.9645c-2.4521 3.9894-5.2377 5.4429-9.563 5.4429Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n        <span><a\n          href=\"https://nuxt.studio\"\n          target=\"_blank\"\n          rel=\"noopener\"\n        >Nuxt Studio</a>: Preview enabled</span>\n        <button @click=\"closePreviewMode\">\n          Close\n        </button>\n      </template>\n    </div>\n    <Transition name=\"preview-loading\">\n      <div v-if=\"open && !previewReady && !error\">\n        <div id=\"__preview_background\" />\n        <div id=\"__preview_loader\">\n          <svg\n            id=\"__preview_loading_icon\"\n            width=\"32\"\n            height=\"32\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 0 0 4.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 0 1-15.357-2m15.357 2H15\"\n            />\n          </svg>\n          <p>Initializing the preview...</p>\n          <button @click=\"closePreviewMode\">\n            Cancel\n          </button>\n        </div>\n      </div>\n    </Transition>\n    <Transition name=\"preview-loading\">\n      <div v-if=\"error\">\n        <div id=\"__preview_background\" />\n        <div id=\"__preview_loader\">\n          <p>{{ error }}</p>\n          <button @click=\"closePreviewMode\">\n            Exit preview\n          </button>\n        </div>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<style>\n\nbody.__preview_enabled{padding-bottom:50px}\n\n</style>\n\n<style scoped>\n\n#__nuxt_preview {\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-family: Helvetica, sans-serif;\n  font-weight: 500;\n  position: fixed;\n  bottom: -60px;\n  left: 0;\n  right: 0;\n  background: rgba(255, 255, 255, 0.3);\n  color: black;\n  backdrop-filter: blur(20px);\n  border-top: 1px #eee solid;\n  transition: bottom 0.3s ease-in-out;\n  font-size: 16px;\n  z-index: 10000;\n}\n#__nuxt_preview.__preview_ready {\n  bottom: 0;\n}\n\n#__preview_background {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 9000;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(255, 255, 255, 0.3);\n  backdrop-filter: blur(8px);\n}\n\n#__preview_loader {\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 1.4rem;\n  z-index: 9500;\n  color: black;\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n#__preview_loader p {\n  margin: 10px 0;\n}\n\n.dark #__preview_background,\n.dark-mode #__preview_background {\n  background: rgba(0, 0, 0, 0.3);\n}\n.dark #__preview_loader,\n.dark-mode #__preview_loader {\n  color: white;\n}\n\n.preview-loading-enter-active,\n.preview-loading-leave-active {\n  transition: opacity 0.4s;\n}\n.preview-loading-enter,\n.preview-loading-leave-to {\n  opacity: 0;\n}\n\n#__preview_loading_icon {\n  animation: spin 1s linear infinite;\n}\n\n.dark #__nuxt_preview,\n.dark-mode #__nuxt_preview {\n  background: rgba(0, 0, 0, 0.3);\n  border-top: 1px #111 solid;\n  color: white;\n}\n#__nuxt_preview svg {\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  color: black;\n}\n.dark #__nuxt_preview svg,\n.dark-mode #__nuxt_preview svg {\n  color: white;\n}\nbutton {\n  cursor: pointer;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 4px 10px;\n  border-radius: 3px;\n  background: transparent;\n  margin-left: 5px;\n  margin-right: 8px;\n  color: rgba(0, 0, 0, 0.8);\n  font-size: 14px;\n  line-height: 1rem;\n  transition: none;\n  text-align: center;\n  font-weight: normal;\n  box-shadow: none;\n  display: inline-block;\n  width: auto;\n  margin: 0;\n}\nbutton:hover {\n  color: rgba(0, 0, 0, 0.9);\n  border-color: rgba(0, 0, 0, 0.4);\n}\n.dark-mode button,\n.dark button {\n  color: lightgray;\n  border-color: rgba(255, 255, 255, 0.2)\n}\n.dark-mode button:hover,\n.dark button:hover {\n  color: white;\n  border-color: rgba(255, 255, 255, 0.4)\n}\n#__nuxt_preview button:hover,\n#__nuxt_preview button:focus {\n  background: rgba(0, 0, 0, 0.1);\n}\n#__nuxt_preview button:active {\n  background: rgba(0, 0, 0, 0.2);\n}\n.dark #__nuxt_preview button,\n.dark-mode #__nuxt_preview button {\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  color: rgba(255, 255, 255, 0.8);\n}\n.dark #__nuxt_preview button:hover,\n.dark #__nuxt_preview button:hover,\n.dark-mode #__nuxt_preview button:focus,\n.dark-mode #__nuxt_preview button:focus {\n  background: rgba(255, 255, 255, 0.1);\n}\n.dark #__nuxt_preview button:active,\n.dark-mode #__nuxt_preview button:active {\n  background: rgba(255, 255, 255, 0.2);\n}\n\na {\n  font-weight: 600;\n}\n#__nuxt_preview.__preview_refreshing svg,\n#__nuxt_preview.__preview_refreshing span,\n#__nuxt_preview.__preview_refreshing button {\n  animation: nuxt_pulsate 1s ease-out;\n  animation-iteration-count: infinite;\n  opacity: 0.5;\n}\n@keyframes nuxt_pulsate {\n  0% {\n      opacity: 1;\n  }\n  50% {\n      opacity: 0.5;\n  }\n  100% {\n      opacity: 1;\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(360deg);\n  }\n  100% {\n    transform: rotate(0deg);\n  }\n}\n\n</style>\n",
      "start": 1707665596750,
      "end": 1707665596755,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "file": "/workspace/Kubernetes-Bootcamp/node_modules/@nuxthq/studio/dist/runtime/components/ContentPreviewMode.vue",
        "sources": [
          "/workspace/Kubernetes-Bootcamp/node_modules/@nuxthq/studio/dist/runtime/components/ContentPreviewMode.vue"
        ],
        "names": [],
        "mappings": "AAAA,wBAAwqKxB;AACA;AACA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,AAkEV;AACA;AACA;;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkLA;"
      }
    },
    {
      "name": "content-slot",
      "start": 1707665596755,
      "end": 1707665596755,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707665596755,
      "end": 1707665596755,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707665596755,
      "end": 1707665596755,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707665596755,
      "end": 1707665596755,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707665596755,
      "end": 1707665596755,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707665596755,
      "end": 1707665596755,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import _sfc_main from \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxthq/studio/dist/runtime/components/ContentPreviewMode.vue?vue&type=script&setup=true&lang.ts\";\nexport * from \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxthq/studio/dist/runtime/components/ContentPreviewMode.vue?vue&type=script&setup=true&lang.ts\";\nimport \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxthq/studio/dist/runtime/components/ContentPreviewMode.vue?vue&type=style&index=0&lang.css\";\nimport \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxthq/studio/dist/runtime/components/ContentPreviewMode.vue?vue&type=style&index=1&scoped=9c967cf1&lang.css\";\nimport _export_sfc from \"\\0plugin-vue:export-helper\";\nexport default /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-9c967cf1\"]]);\n",
      "start": 1707665596755,
      "end": 1707665597131,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707665597131,
      "end": 1707665597131,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707665597131,
      "end": 1707665597131,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707665597131,
      "end": 1707665597132,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707665597132,
      "end": 1707665597132,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707665597132,
      "end": 1707665597134,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707665597134,
      "end": 1707665597134,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707665597134,
      "end": 1707665597134,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707665597134,
      "end": 1707665597135,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707665597135,
      "end": 1707665597135,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707665597135,
      "end": 1707665597135,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707665597135,
      "end": 1707665597136,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707665597136,
      "end": 1707665597136,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707665597136,
      "end": 1707665597136,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707665597136,
      "end": 1707665597136,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707665597136,
      "end": 1707665597136,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707665597136,
      "end": 1707665597136,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707665597136,
      "end": 1707665597136,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707665597136,
      "end": 1707665597137,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707665597137,
      "end": 1707665597137,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707665597137,
      "end": 1707665597137,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707665597140,
      "end": 1707665597140,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707665597141,
      "end": 1707665597141,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707665597142,
      "end": 1707665597142,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707665597142,
      "end": 1707665597142,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707665597142,
      "end": 1707665597142,
      "order": "normal"
    }
  ]
}
