{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/@nuxt/content/dist/runtime/query/match/utils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export const get = (obj, path) => path.split(\".\").reduce((acc, part) => acc && acc[part], obj);\nconst _pick = (obj, condition) => Object.keys(obj).filter(condition).reduce((newObj, key) => Object.assign(newObj, { [key]: obj[key] }), {});\nexport const pick = (keys) => (obj) => keys && keys.length ? _pick(obj, (key) => keys.includes(key)) : obj;\nexport const omit = (keys) => (obj) => keys && keys.length ? _pick(obj, (key) => !keys.includes(key)) : obj;\nexport const apply = (fn) => (data) => Array.isArray(data) ? data.map((item) => fn(item)) : fn(data);\nexport const detectProperties = (keys) => {\n  const prefixes = [];\n  const properties = [];\n  for (const key of keys) {\n    if ([\"$\", \"_\"].includes(key)) {\n      prefixes.push(key);\n    } else {\n      properties.push(key);\n    }\n  }\n  return { prefixes, properties };\n};\nexport const withoutKeys = (keys = []) => (obj) => {\n  if (keys.length === 0 || !obj) {\n    return obj;\n  }\n  const { prefixes, properties } = detectProperties(keys);\n  return _pick(obj, (key) => !properties.includes(key) && !prefixes.includes(key[0]));\n};\nexport const withKeys = (keys = []) => (obj) => {\n  if (keys.length === 0 || !obj) {\n    return obj;\n  }\n  const { prefixes, properties } = detectProperties(keys);\n  return _pick(obj, (key) => properties.includes(key) || prefixes.includes(key[0]));\n};\nexport const sortList = (data, params) => {\n  const comperable = new Intl.Collator(params.$locale, {\n    numeric: params.$numeric,\n    caseFirst: params.$caseFirst,\n    sensitivity: params.$sensitivity\n  });\n  const keys = Object.keys(params).filter((key) => !key.startsWith(\"$\"));\n  for (const key of keys) {\n    data = data.sort((a, b) => {\n      const values = [get(a, key), get(b, key)].map((value) => {\n        if (value === null) {\n          return void 0;\n        }\n        if (value instanceof Date) {\n          return value.toISOString();\n        }\n        return value;\n      });\n      if (params[key] === -1) {\n        values.reverse();\n      }\n      return comperable.compare(values[0], values[1]);\n    });\n  }\n  return data;\n};\nexport const assertArray = (value, message = \"Expected an array\") => {\n  if (!Array.isArray(value)) {\n    throw new TypeError(message);\n  }\n};\nexport const ensureArray = (value) => {\n  return Array.isArray(value) ? value : [void 0, null].includes(value) ? [] : [value];\n};\n",
      "start": 1709670070728,
      "end": 1709670071114,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709670071114,
      "end": 1709670071114,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709670071114,
      "end": 1709670071115,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "export const get = (obj, path) => path.split(\".\").reduce((acc, part) => acc && acc[part], obj);\nconst _pick = (obj, condition) => Object.keys(obj).filter(condition).reduce((newObj, key) => Object.assign(newObj, { [key]: obj[key] }), {});\nexport const pick = (keys) => (obj) => keys && keys.length ? _pick(obj, (key) => keys.includes(key)) : obj;\nexport const omit = (keys) => (obj) => keys && keys.length ? _pick(obj, (key) => !keys.includes(key)) : obj;\nexport const apply = (fn) => (data) => Array.isArray(data) ? data.map((item) => fn(item)) : fn(data);\nexport const detectProperties = (keys) => {\n  const prefixes = [];\n  const properties = [];\n  for (const key of keys) {\n    if ([\"$\", \"_\"].includes(key)) {\n      prefixes.push(key);\n    } else {\n      properties.push(key);\n    }\n  }\n  return { prefixes, properties };\n};\nexport const withoutKeys = (keys = []) => (obj) => {\n  if (keys.length === 0 || !obj) {\n    return obj;\n  }\n  const { prefixes, properties } = detectProperties(keys);\n  return _pick(obj, (key) => !properties.includes(key) && !prefixes.includes(key[0]));\n};\nexport const withKeys = (keys = []) => (obj) => {\n  if (keys.length === 0 || !obj) {\n    return obj;\n  }\n  const { prefixes, properties } = detectProperties(keys);\n  return _pick(obj, (key) => properties.includes(key) || prefixes.includes(key[0]));\n};\nexport const sortList = (data, params) => {\n  const comperable = new Intl.Collator(params.$locale, {\n    numeric: params.$numeric,\n    caseFirst: params.$caseFirst,\n    sensitivity: params.$sensitivity\n  });\n  const keys = Object.keys(params).filter((key) => !key.startsWith(\"$\"));\n  for (const key of keys) {\n    data = data.sort((a, b) => {\n      const values = [get(a, key), get(b, key)].map((value) => {\n        if (value === null) {\n          return void 0;\n        }\n        if (value instanceof Date) {\n          return value.toISOString();\n        }\n        return value;\n      });\n      if (params[key] === -1) {\n        values.reverse();\n      }\n      return comperable.compare(values[0], values[1]);\n    });\n  }\n  return data;\n};\nexport const assertArray = (value, message = \"Expected an array\") => {\n  if (!Array.isArray(value)) {\n    throw new TypeError(message);\n  }\n};\nexport const ensureArray = (value) => {\n  return Array.isArray(value) ? value : [void 0, null].includes(value) ? [] : [value];\n};\n",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709670071115,
      "end": 1709670071115,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709670071115,
      "end": 1709670071116,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709670071116,
      "end": 1709670071116,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709670071116,
      "end": 1709670071116,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709670071116,
      "end": 1709670071116,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709670071116,
      "end": 1709670071116,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709670071116,
      "end": 1709670071116,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709670071116,
      "end": 1709670071116,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709670071116,
      "end": 1709670071116,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709670071116,
      "end": 1709670071116,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709670071116,
      "end": 1709670071116,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709670071116,
      "end": 1709670071117,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709670071117,
      "end": 1709670071117,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709670071117,
      "end": 1709670071117,
      "order": "normal"
    }
  ]
}
