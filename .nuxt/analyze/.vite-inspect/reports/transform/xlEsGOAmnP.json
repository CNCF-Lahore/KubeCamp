{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/@unhead/vue/dist/shared/vue.f36acd1f.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, watchEffect, watch, getCurrentInstance, onBeforeUnmount, onDeactivated, onActivated } from 'vue';\nimport { i as injectHead, r as resolveUnrefHeadInput } from './vue.cf295fb1.mjs';\n\nfunction useHead(input, options = {}) {\n  const head = options.head || injectHead();\n  if (head) {\n    if (!head.ssr)\n      return clientUseHead(head, input, options);\n    return head.push(input, options);\n  }\n}\nfunction clientUseHead(head, input, options = {}) {\n  const deactivated = ref(false);\n  const resolvedInput = ref({});\n  watchEffect(() => {\n    resolvedInput.value = deactivated.value ? {} : resolveUnrefHeadInput(input);\n  });\n  const entry = head.push(resolvedInput.value, options);\n  watch(resolvedInput, (e) => {\n    entry.patch(e);\n  });\n  const vm = getCurrentInstance();\n  if (vm) {\n    onBeforeUnmount(() => {\n      entry.dispose();\n    });\n    onDeactivated(() => {\n      deactivated.value = true;\n    });\n    onActivated(() => {\n      deactivated.value = false;\n    });\n  }\n  return entry;\n}\n\nexport { useHead as u };\n",
      "start": 1708374871308,
      "end": 1708374871479,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708374871479,
      "end": 1708374871479,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708374871480,
      "end": 1708374871480,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "import { ref, watchEffect, watch, getCurrentInstance, onBeforeUnmount, onDeactivated, onActivated } from 'vue';\nimport { i as injectHead, r as resolveUnrefHeadInput } from './vue.cf295fb1.mjs';\n\nfunction useHead(input, options = {}) {\n  const head = options.head || injectHead();\n  if (head) {\n    if (!head.ssr)\n      return clientUseHead(head, input, options);\n    return head.push(input, options);\n  }\n}\nfunction clientUseHead(head, input, options = {}) {\n  const deactivated = ref(false);\n  const resolvedInput = ref({});\n  watchEffect(() => {\n    resolvedInput.value = deactivated.value ? {} : resolveUnrefHeadInput(input);\n  });\n  const entry = head.push(resolvedInput.value, options);\n  watch(resolvedInput, (e) => {\n    entry.patch(e);\n  });\n  const vm = getCurrentInstance();\n  if (vm) {\n    onBeforeUnmount(() => {\n      entry.dispose();\n    });\n    onDeactivated(() => {\n      deactivated.value = true;\n    });\n    onActivated(() => {\n      deactivated.value = false;\n    });\n  }\n  return entry;\n}\n\nexport { useHead as u };\n",
      "start": 1708374871480,
      "end": 1708374871480,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708374871480,
      "end": 1708374871480,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708374871480,
      "end": 1708374871480,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708374871480,
      "end": 1708374871480,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708374871480,
      "end": 1708374871480,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708374871480,
      "end": 1708374871480,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708374871483,
      "end": 1708374871483,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708374871483,
      "end": 1708374871483,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708374871484,
      "end": 1708374871484,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708374871484,
      "end": 1708374871484,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708374871484,
      "end": 1708374871484,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708374871484,
      "end": 1708374871484,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708374871484,
      "end": 1708374871484,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708374871489,
      "end": 1708374871489,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708374871490,
      "end": 1708374871492,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708374871498,
      "end": 1708374871498,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708374871503,
      "end": 1708374871503,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708374871504,
      "end": 1708374871504,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708374871504,
      "end": 1708374871504,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708374871504,
      "end": 1708374871504,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708374871504,
      "end": 1708374871505,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708374871508,
      "end": 1708374871508,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708374871513,
      "end": 1708374871513,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708374871514,
      "end": 1708374871516,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708374871530,
      "end": 1708374871530,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708374871532,
      "end": 1708374871532,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708374871532,
      "end": 1708374871532,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708374871532,
      "end": 1708374871532,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708374871532,
      "end": 1708374871532,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708374871532,
      "end": 1708374871532,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708374871535,
      "end": 1708374871535,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708374871540,
      "end": 1708374871540,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708374871545,
      "end": 1708374871547,
      "order": "normal"
    }
  ]
}
