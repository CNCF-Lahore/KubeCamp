{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/engine.io-client/build/esm/contrib/parseuri.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n",
      "start": 1708606103020,
      "end": 1708606103037,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708606103037,
      "end": 1708606103037,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708606103038,
      "end": 1708606103038,
      "order": "normal"
    }
  ]
}
