{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/nuxt/dist/app/compat/interval.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createError } from \"../composables/error.js\";\nconst intervalError = \"[nuxt] `setInterval` should not be used on the server. Consider wrapping it with an `onNuxtReady`, `onBeforeMount` or `onMounted` lifecycle hook, or ensure you only call it in the browser by checking `import.meta.client`.\";\nexport const setInterval = import.meta.client ? window.setInterval : () => {\n  if (import.meta.dev) {\n    throw createError({\n      statusCode: 500,\n      message: intervalError\n    });\n  }\n  console.error(intervalError);\n};\n",
      "start": 1708988596455,
      "end": 1708988597490,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "replace",
      "result": "import { createError } from \"../composables/error.js\";\nconst intervalError = \"[nuxt] `setInterval` should not be used on the server. Consider wrapping it with an `onNuxtReady`, `onBeforeMount` or `onMounted` lifecycle hook, or ensure you only call it in the browser by checking `false`.\";\nexport const setInterval = false ? window.setInterval : () => {\n  if (false) {\n    throw createError({\n      statusCode: 500,\n      message: intervalError\n    });\n  }\n  console.error(intervalError);\n};\n",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtkB,CAAC,CAAC,CAAC,CAAC;AACtP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAe,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC;"
      }
    },
    {
      "name": "ssr-styles",
      "start": 1708988597490,
      "end": 1708988597490,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { createError } from \"../composables/error.js\";\nconst intervalError = \"[nuxt] `setInterval` should not be used on the server. Consider wrapping it with an `onNuxtReady`, `onBeforeMount` or `onMounted` lifecycle hook, or ensure you only call it in the browser by checking `false`.\";\nexport const setInterval = false ? (void 0).setInterval : () => {\n  if (false) {\n    throw createError({\n      statusCode: 500,\n      message: intervalError\n    });\n  }\n  console.error(intervalError);\n};\n",
      "start": 1708988597490,
      "end": 1708988597515,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/workspace/Kubernetes-Bootcamp/node_modules/nuxt/dist/app/compat/interval.js\"],\n  \"sourcesContent\": [\"import { createError } from \\\"../composables/error.js\\\";\\nconst intervalError = \\\"[nuxt] `setInterval` should not be used on the server. Consider wrapping it with an `onNuxtReady`, `onBeforeMount` or `onMounted` lifecycle hook, or ensure you only call it in the browser by checking `false`.\\\";\\nexport const setInterval = false ? window.setInterval : () => {\\n  if (false) {\\n    throw createError({\\n      statusCode: 500,\\n      message: intervalError\\n    });\\n  }\\n  console.error(intervalError);\\n};\\n\"],\n  \"mappings\": \"AAAA,SAAS,mBAAmB;AAC5B,MAAM,gBAAgB;AACf,aAAM,cAAc,QAAQ,SAAO,cAAc,MAAM;AAC5D,MAAI,OAAO;AACT,UAAM,YAAY;AAAA,MAChB,YAAY;AAAA,MACZ,SAAS;AAAA,IACX,CAAC;AAAA,EACH;AACA,UAAQ,MAAM,aAAa;AAC7B;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1708988597515,
      "end": 1708988597515,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708988597515,
      "end": 1708988597515,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708988597515,
      "end": 1708988597515,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708988597515,
      "end": 1708988597516,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708988597516,
      "end": 1708988597516,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708988597516,
      "end": 1708988597516,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708988597516,
      "end": 1708988597516,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708988597517,
      "end": 1708988597517,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708988597517,
      "end": 1708988597517,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708988597517,
      "end": 1708988597517,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708988597517,
      "end": 1708988597518,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708988597519,
      "end": 1708988597519,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708988597519,
      "end": 1708988597519,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708988597519,
      "end": 1708988597520,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708988597519,
      "end": 1708988597520,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1708988597520,
      "end": 1708988597520,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708988597520,
      "end": 1708988597520,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708988597521,
      "end": 1708988597521,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708988597521,
      "end": 1708988597521,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708988597521,
      "end": 1708988597521,
      "order": "normal"
    }
  ]
}
