{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/docus/composables/useScrollspy.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import type { Ref } from 'vue'\n\n/**\n * Scrollspy allows you to watch visible headings in a specific page.\n * Useful for table of contents live style updates.\n */\nexport const useScrollspy = () => {\n  const observer = ref() as Ref<IntersectionObserver>\n  const visibleHeadings = ref([]) as Ref<string[]>\n  const activeHeadings = ref([]) as Ref<string[]>\n\n  const observerCallback = (entries: IntersectionObserverEntry[]) =>\n    entries.forEach((entry) => {\n      const id = entry.target.id\n\n      if (entry.isIntersecting) { visibleHeadings.value.push(id) } else { visibleHeadings.value = visibleHeadings.value.filter(t => t !== id) }\n    })\n\n  const updateHeadings = (headings: Element[]) =>\n    headings.forEach((heading) => {\n      observer.value.observe(heading)\n    })\n\n  watch(visibleHeadings, (val, oldVal) => {\n    if (val.length === 0) { activeHeadings.value = oldVal } else { activeHeadings.value = val }\n  }, { deep: true })\n\n  // Create intersection observer\n  onBeforeMount(() => (observer.value = new IntersectionObserver(observerCallback)))\n\n  // Destroy it\n  onBeforeUnmount(() => observer.value?.disconnect())\n\n  return {\n    visibleHeadings,\n    activeHeadings,\n    updateHeadings\n  }\n}\n",
      "start": 1708190404434,
      "end": 1708190404648,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708190404648,
      "end": 1708190404648,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708190404648,
      "end": 1708190404648,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708190404648,
      "end": 1708190404648,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708190404648,
      "end": 1708190404648,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "import type { Ref } from 'vue'\n\n/**\n * Scrollspy allows you to watch visible headings in a specific page.\n * Useful for table of contents live style updates.\n */\nexport const useScrollspy = () => {\n  const observer = ref() as Ref<IntersectionObserver>\n  const visibleHeadings = ref([]) as Ref<string[]>\n  const activeHeadings = ref([]) as Ref<string[]>\n\n  const observerCallback = (entries: IntersectionObserverEntry[]) =>\n    entries.forEach((entry) => {\n      const id = entry.target.id\n\n      if (entry.isIntersecting) { visibleHeadings.value.push(id) } else { visibleHeadings.value = visibleHeadings.value.filter(t => t !== id) }\n    })\n\n  const updateHeadings = (headings: Element[]) =>\n    headings.forEach((heading) => {\n      observer.value.observe(heading)\n    })\n\n  watch(visibleHeadings, (val, oldVal) => {\n    if (val.length === 0) { activeHeadings.value = oldVal } else { activeHeadings.value = val }\n  }, { deep: true })\n\n  // Create intersection observer\n  onBeforeMount(() => (observer.value = new IntersectionObserver(observerCallback)))\n\n  // Destroy it\n  onBeforeUnmount(() => observer.value?.disconnect())\n\n  return {\n    visibleHeadings,\n    activeHeadings,\n    updateHeadings\n  }\n}\n",
      "start": 1708190404648,
      "end": 1708190404648,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "result": "import type { Ref } from 'vue'\n\n/**\n * Scrollspy allows you to watch visible headings in a specific page.\n * Useful for table of contents live style updates.\n */\nexport const useScrollspy = () => {\n  const observer = ref() as Ref<IntersectionObserver>\n  const visibleHeadings = ref([]) as Ref<string[]>\n  const activeHeadings = ref([]) as Ref<string[]>\n\n  const observerCallback = (entries: IntersectionObserverEntry[]) =>\n    entries.forEach((entry) => {\n      const id = entry.target.id\n\n      if (entry.isIntersecting) { visibleHeadings.value.push(id) } else { visibleHeadings.value = visibleHeadings.value.filter(t => t !== id) }\n    })\n\n  const updateHeadings = (headings: Element[]) =>\n    headings.forEach((heading) => {\n      observer.value.observe(heading)\n    })\n\n  watch(visibleHeadings, (val, oldVal) => {\n    if (val.length === 0) { activeHeadings.value = oldVal } else { activeHeadings.value = val }\n  }, { deep: true })\n\n  // Create intersection observer\n  onBeforeMount(() => (observer.value = new IntersectionObserver(observerCallback)))\n\n  // Destroy it\n  onBeforeUnmount(() => observer.value?.disconnect())\n\n  return {\n    visibleHeadings,\n    activeHeadings,\n    updateHeadings\n  }\n}\n",
      "start": 1708190404648,
      "end": 1708190404648,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708190404648,
      "end": 1708190404648,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708190404648,
      "end": 1708190404648,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708190404648,
      "end": 1708190404648,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708190404648,
      "end": 1708190404648,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "export const useScrollspy = () => {\n  const observer = ref();\n  const visibleHeadings = ref([]);\n  const activeHeadings = ref([]);\n  const observerCallback = (entries) => entries.forEach((entry) => {\n    const id = entry.target.id;\n    if (entry.isIntersecting) {\n      visibleHeadings.value.push(id);\n    } else {\n      visibleHeadings.value = visibleHeadings.value.filter((t) => t !== id);\n    }\n  });\n  const updateHeadings = (headings) => headings.forEach((heading) => {\n    observer.value.observe(heading);\n  });\n  watch(visibleHeadings, (val, oldVal) => {\n    if (val.length === 0) {\n      activeHeadings.value = oldVal;\n    } else {\n      activeHeadings.value = val;\n    }\n  }, { deep: true });\n  onBeforeMount(() => observer.value = new IntersectionObserver(observerCallback));\n  onBeforeUnmount(() => observer.value?.disconnect());\n  return {\n    visibleHeadings,\n    activeHeadings,\n    updateHeadings\n  };\n};\n",
      "start": 1708190404648,
      "end": 1708190404661,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/docus/composables/useScrollspy.ts"
        ],
        "sourcesContent": [
          "import type { Ref } from 'vue'\n\n/**\n * Scrollspy allows you to watch visible headings in a specific page.\n * Useful for table of contents live style updates.\n */\nexport const useScrollspy = () => {\n  const observer = ref() as Ref<IntersectionObserver>\n  const visibleHeadings = ref([]) as Ref<string[]>\n  const activeHeadings = ref([]) as Ref<string[]>\n\n  const observerCallback = (entries: IntersectionObserverEntry[]) =>\n    entries.forEach((entry) => {\n      const id = entry.target.id\n\n      if (entry.isIntersecting) { visibleHeadings.value.push(id) } else { visibleHeadings.value = visibleHeadings.value.filter(t => t !== id) }\n    })\n\n  const updateHeadings = (headings: Element[]) =>\n    headings.forEach((heading) => {\n      observer.value.observe(heading)\n    })\n\n  watch(visibleHeadings, (val, oldVal) => {\n    if (val.length === 0) { activeHeadings.value = oldVal } else { activeHeadings.value = val }\n  }, { deep: true })\n\n  // Create intersection observer\n  onBeforeMount(() => (observer.value = new IntersectionObserver(observerCallback)))\n\n  // Destroy it\n  onBeforeUnmount(() => observer.value?.disconnect())\n\n  return {\n    visibleHeadings,\n    activeHeadings,\n    updateHeadings\n  }\n}\n"
        ],
        "mappings": "AAMO,aAAM,eAAe,MAAM;AAChC,QAAM,WAAW,IAAI;AACrB,QAAM,kBAAkB,IAAI,CAAC,CAAC;AAC9B,QAAM,iBAAiB,IAAI,CAAC,CAAC;AAE7B,QAAM,mBAAmB,CAAC,YACxB,QAAQ,QAAQ,CAAC,UAAU;AACzB,UAAM,KAAK,MAAM,OAAO;AAExB,QAAI,MAAM,gBAAgB;AAAE,sBAAgB,MAAM,KAAK,EAAE;AAAA,IAAE,OAAO;AAAE,sBAAgB,QAAQ,gBAAgB,MAAM,OAAO,OAAK,MAAM,EAAE;AAAA,IAAE;AAAA,EAC1I,CAAC;AAEH,QAAM,iBAAiB,CAAC,aACtB,SAAS,QAAQ,CAAC,YAAY;AAC5B,aAAS,MAAM,QAAQ,OAAO;AAAA,EAChC,CAAC;AAEH,QAAM,iBAAiB,CAAC,KAAK,WAAW;AACtC,QAAI,IAAI,WAAW,GAAG;AAAE,qBAAe,QAAQ;AAAA,IAAO,OAAO;AAAE,qBAAe,QAAQ;AAAA,IAAI;AAAA,EAC5F,GAAG,EAAE,MAAM,KAAK,CAAC;AAGjB,gBAAc,MAAO,SAAS,QAAQ,IAAI,qBAAqB,gBAAgB,CAAE;AAGjF,kBAAgB,MAAM,SAAS,OAAO,WAAW,CAAC;AAElD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1708190404661,
      "end": 1708190404661,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708190404661,
      "end": 1708190404661,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708190404661,
      "end": 1708190404661,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708190404661,
      "end": 1708190404661,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708190404662,
      "end": 1708190404662,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708190404662,
      "end": 1708190404662,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708190404662,
      "end": 1708190404662,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708190404662,
      "end": 1708190404662,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708190404662,
      "end": 1708190404662,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708190404662,
      "end": 1708190404662,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708190404662,
      "end": 1708190404662,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708190404662,
      "end": 1708190404662,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708190404662,
      "end": 1708190404662,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708190404662,
      "end": 1708190404662,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708190404663,
      "end": 1708190404663,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708190404663,
      "end": 1708190404663,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708190404663,
      "end": 1708190404663,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708190404663,
      "end": 1708190404663,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708190404663,
      "end": 1708190404663,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708190404664,
      "end": 1708190404664,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708190404664,
      "end": 1708190404664,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref, watch, onBeforeMount, onBeforeUnmount } from 'vue';\nexport const useScrollspy = () => {\n  const observer = ref();\n  const visibleHeadings = ref([]);\n  const activeHeadings = ref([]);\n  const observerCallback = (entries) => entries.forEach((entry) => {\n    const id = entry.target.id;\n    if (entry.isIntersecting) {\n      visibleHeadings.value.push(id);\n    } else {\n      visibleHeadings.value = visibleHeadings.value.filter((t) => t !== id);\n    }\n  });\n  const updateHeadings = (headings) => headings.forEach((heading) => {\n    observer.value.observe(heading);\n  });\n  watch(visibleHeadings, (val, oldVal) => {\n    if (val.length === 0) {\n      activeHeadings.value = oldVal;\n    } else {\n      activeHeadings.value = val;\n    }\n  }, { deep: true });\n  onBeforeMount(() => observer.value = new IntersectionObserver(observerCallback));\n  onBeforeUnmount(() => observer.value?.disconnect());\n  return {\n    visibleHeadings,\n    activeHeadings,\n    updateHeadings\n  };\n};\n",
      "start": 1708190404664,
      "end": 1708190404665,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACprtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACppC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref, watch, onBeforeMount, onBeforeUnmount } from 'vue';\nexport const useScrollspy = () => {\n  const observer = ref();\n  const visibleHeadings = ref([]);\n  const activeHeadings = ref([]);\n  const observerCallback = (entries) => entries.forEach((entry) => {\n    const id = entry.target.id;\n    if (entry.isIntersecting) {\n      visibleHeadings.value.push(id);\n    } else {\n      visibleHeadings.value = visibleHeadings.value.filter((t) => t !== id);\n    }\n  });\n  const updateHeadings = (headings) => headings.forEach((heading) => {\n    observer.value.observe(heading);\n  });\n  watch(visibleHeadings, (val, oldVal) => {\n    if (val.length === 0) {\n      activeHeadings.value = oldVal;\n    } else {\n      activeHeadings.value = val;\n    }\n  }, { deep: true });\n  onBeforeMount(() => observer.value = new IntersectionObserver(observerCallback));\n  onBeforeUnmount(() => observer.value?.disconnect());\n  return {\n    visibleHeadings,\n    activeHeadings,\n    updateHeadings\n  };\n};\n",
      "start": 1708190404664,
      "end": 1708190404665,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACprtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACppC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1708190404666,
      "end": 1708190404666,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708190404666,
      "end": 1708190404666,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708190404666,
      "end": 1708190404666,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708190404666,
      "end": 1708190404666,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1708190404666,
      "end": 1708190404666,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708190404666,
      "end": 1708190404666,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { ref, watch, onBeforeMount, onBeforeUnmount } from 'vue';\nexport const useScrollspy = () => {\n  const observer = ref();\n  const visibleHeadings = ref([]);\n  const activeHeadings = ref([]);\n  const observerCallback = (entries) => entries.forEach((entry) => {\n    const id = entry.target.id;\n    if (entry.isIntersecting) {\n      visibleHeadings.value.push(id);\n    } else {\n      visibleHeadings.value = visibleHeadings.value.filter((t) => t !== id);\n    }\n  });\n  const updateHeadings = (headings) => headings.forEach((heading) => {\n    observer.value.observe(heading);\n  });\n  watch(visibleHeadings, (val, oldVal) => {\n    if (val.length === 0) {\n      activeHeadings.value = oldVal;\n    } else {\n      activeHeadings.value = val;\n    }\n  }, { deep: true });\n   false && /*@__PURE__*/ onBeforeMount(() => observer.value = new IntersectionObserver(observerCallback));\n   false && /*@__PURE__*/ onBeforeUnmount(() => observer.value?.disconnect());\n  return {\n    visibleHeadings,\n    activeHeadings,\n    updateHeadings\n  };\n};\n",
      "start": 1708190404666,
      "end": 1708190404666,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACprtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACppC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,uCAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,yCAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708190404666,
      "end": 1708190404666,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708190404666,
      "end": 1708190404666,
      "order": "normal"
    }
  ]
}
