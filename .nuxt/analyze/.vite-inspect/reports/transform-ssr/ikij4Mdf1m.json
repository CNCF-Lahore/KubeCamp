{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/elements/components/globals/ButtonLink.vue?nuxt_component=async&nuxt_component_name=ButtonLink",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup lang=\"ts\">\nimport { PinceauTheme } from 'pinceau'\nimport { computedStyle } from 'pinceau/runtime'\n\ndefineProps({\n  blank: {\n    type: Boolean,\n    required: false,\n    default: false\n  },\n  color: computedStyle<keyof PinceauTheme['color']>('primary'),\n  href: {\n    type: String,\n    required: true,\n    default: ''\n  },\n  icon: {\n    type: String,\n    default: ''\n  },\n  ...variants\n})\n</script>\n\n<template>\n  <NuxtLink class=\"button-link\" :to=\"href\" :target=\"blank ? '_blank' : undefined\">\n    <Icon v-if=\"icon\" :name=\"icon\" />\n    <ContentSlot :use=\"$slots.default\" unwrap=\"p ul li\" />\n  </NuxtLink>\n</template>\n\n<style lang=\"ts\" scoped>\ncss({\n  '.button-link': {\n    '--button-primary': (props) => `{color.${props.color}.600}`,\n    '--button-secondary': (props) => `{color.${props.color}.500}`,\n    display: 'inline-flex',\n    flex: 'none',\n    alignItems: 'center',\n    borderRadius: '{radii.md}',\n    transition: 'color 100ms ease-in-out',\n    fontWeight: '{fontWeight.bold}',\n    color: '{color.white}',\n    backgroundColor: '{button.primary}',\n    border: '1px solid transparent',\n    '&:hover': {\n      backgroundColor: '{button.secondary}'\n    },\n    '&:focus': {\n      border: `1px solid {button.primary}`\n    },\n    '.icon': {\n      marginInlineEnd: '{space.1}'\n    }\n  },\n  variants: {\n    size: {\n      small: {\n        padding: `{space.2} {space.4}`,\n        fontSize: '{text.sm.fontSize}',\n        lineHeight: '{text.sm.lineHeight}',\n      },\n      medium: {\n        padding: `{space.rem.625} {space.5}`,\n        fontSize: '{text.base.fontSize}',\n        lineHeight: '{text.base.lineHeight}',\n      },\n      large: {\n        padding: `{space.3} {space.6}`,\n        fontSize: '{text.lg.fontSize}',\n        lineHeight: '{text.lg.lineHeight}',\n      },\n      giant: {\n        padding: `{space.4} {space.8}`,\n        fontSize: '{text.lg.fontSize}',\n        lineHeight: '{text.lg.lineHeight}',\n      },\n      options: {\n        default: 'medium'\n      }\n    },\n    transparent: {\n      true: {\n        backgroundColor: `transparent`,\n      }\n    }\n  }\n})\n</style>\n",
      "start": 1708190401887,
      "end": 1708190401946,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708190401946,
      "end": 1708190401946,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708190401946,
      "end": 1708190401946,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708190401946,
      "end": 1708190401946,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708190401946,
      "end": 1708190401946,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "start": 1708190401946,
      "end": 1708190401947,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "start": 1708190401946,
      "end": 1708190401947,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "result": "<script setup lang=\"ts\">\nimport { PinceauTheme } from 'pinceau'\nimport { computedStyle } from 'pinceau/runtime'\n\ndefineProps({\n  blank: {\n    type: Boolean,\n    required: false,\n    default: false\n  },\n  color: computedStyle<keyof PinceauTheme['color']>('primary'),\n  href: {\n    type: String,\n    required: true,\n    default: ''\n  },\n  icon: {\n    type: String,\n    default: ''\n  },\n  ...variants\n})\n</script>\n\n<template>\n  <NuxtLink class=\"button-link\" :to=\"href\" :target=\"blank ? '_blank' : undefined\">\n    <Icon v-if=\"icon\" :name=\"icon\" />\n    <MDCSlot  name=\"default\" unwrap=\"p ul li\" />\n  </NuxtLink>\n</template>\n\n<style lang=\"ts\" scoped>\ncss({\n  '.button-link': {\n    '--button-primary': (props) => `{color.${props.color}.600}`,\n    '--button-secondary': (props) => `{color.${props.color}.500}`,\n    display: 'inline-flex',\n    flex: 'none',\n    alignItems: 'center',\n    borderRadius: '{radii.md}',\n    transition: 'color 100ms ease-in-out',\n    fontWeight: '{fontWeight.bold}',\n    color: '{color.white}',\n    backgroundColor: '{button.primary}',\n    border: '1px solid transparent',\n    '&:hover': {\n      backgroundColor: '{button.secondary}'\n    },\n    '&:focus': {\n      border: `1px solid {button.primary}`\n    },\n    '.icon': {\n      marginInlineEnd: '{space.1}'\n    }\n  },\n  variants: {\n    size: {\n      small: {\n        padding: `{space.2} {space.4}`,\n        fontSize: '{text.sm.fontSize}',\n        lineHeight: '{text.sm.lineHeight}',\n      },\n      medium: {\n        padding: `{space.rem.625} {space.5}`,\n        fontSize: '{text.base.fontSize}',\n        lineHeight: '{text.base.lineHeight}',\n      },\n      large: {\n        padding: `{space.3} {space.6}`,\n        fontSize: '{text.lg.fontSize}',\n        lineHeight: '{text.lg.lineHeight}',\n      },\n      giant: {\n        padding: `{space.4} {space.8}`,\n        fontSize: '{text.lg.fontSize}',\n        lineHeight: '{text.lg.lineHeight}',\n      },\n      options: {\n        default: 'medium'\n      }\n    },\n    transparent: {\n      true: {\n        backgroundColor: `transparent`,\n      }\n    }\n  }\n})\n</style>\n",
      "start": 1708190401947,
      "end": 1708190401947,
      "order": "pre",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "content-slot",
      "result": "<script setup lang=\"ts\">\nimport { PinceauTheme } from 'pinceau'\nimport { computedStyle } from 'pinceau/runtime'\n\ndefineProps({\n  blank: {\n    type: Boolean,\n    required: false,\n    default: false\n  },\n  color: computedStyle<keyof PinceauTheme['color']>('primary'),\n  href: {\n    type: String,\n    required: true,\n    default: ''\n  },\n  icon: {\n    type: String,\n    default: ''\n  },\n  ...variants\n})\n</script>\n\n<template>\n  <NuxtLink class=\"button-link\" :to=\"href\" :target=\"blank ? '_blank' : undefined\">\n    <Icon v-if=\"icon\" :name=\"icon\" />\n    <MDCSlot  name=\"default\" unwrap=\"p ul li\" />\n  </NuxtLink>\n</template>\n\n<style lang=\"ts\" scoped>\ncss({\n  '.button-link': {\n    '--button-primary': (props) => `{color.${props.color}.600}`,\n    '--button-secondary': (props) => `{color.${props.color}.500}`,\n    display: 'inline-flex',\n    flex: 'none',\n    alignItems: 'center',\n    borderRadius: '{radii.md}',\n    transition: 'color 100ms ease-in-out',\n    fontWeight: '{fontWeight.bold}',\n    color: '{color.white}',\n    backgroundColor: '{button.primary}',\n    border: '1px solid transparent',\n    '&:hover': {\n      backgroundColor: '{button.secondary}'\n    },\n    '&:focus': {\n      border: `1px solid {button.primary}`\n    },\n    '.icon': {\n      marginInlineEnd: '{space.1}'\n    }\n  },\n  variants: {\n    size: {\n      small: {\n        padding: `{space.2} {space.4}`,\n        fontSize: '{text.sm.fontSize}',\n        lineHeight: '{text.sm.lineHeight}',\n      },\n      medium: {\n        padding: `{space.rem.625} {space.5}`,\n        fontSize: '{text.base.fontSize}',\n        lineHeight: '{text.base.lineHeight}',\n      },\n      large: {\n        padding: `{space.3} {space.6}`,\n        fontSize: '{text.lg.fontSize}',\n        lineHeight: '{text.lg.lineHeight}',\n      },\n      giant: {\n        padding: `{space.4} {space.8}`,\n        fontSize: '{text.lg.fontSize}',\n        lineHeight: '{text.lg.lineHeight}',\n      },\n      options: {\n        default: 'medium'\n      }\n    },\n    transparent: {\n      true: {\n        backgroundColor: `transparent`,\n      }\n    }\n  }\n})\n</style>\n",
      "start": 1708190401947,
      "end": 1708190401947,
      "order": "pre",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708190401947,
      "end": 1708190401947,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708190401947,
      "end": 1708190401947,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708190401947,
      "end": 1708190401947,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708190401947,
      "end": 1708190401947,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708190401947,
      "end": 1708190401947,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import _sfc_main from \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/elements/components/globals/ButtonLink.vue?vue&type=script&setup=true&lang.ts\";\nexport * from \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/elements/components/globals/ButtonLink.vue?vue&type=script&setup=true&lang.ts\";\nimport \"/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/elements/components/globals/ButtonLink.vue?vue&type=style&index=0&scoped=e94f9fa2&lang.ts\";\nimport { useSSRContext as __vite_useSSRContext } from \"vue\";\nconst _sfc_setup = _sfc_main.setup;\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext();\n  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(\"node_modules/@nuxt-themes/elements/components/globals/ButtonLink.vue\");\n  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;\n};\nimport _export_sfc from \"\\0plugin-vue:export-helper\";\nexport default /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-e94f9fa2\"]]);\n",
      "start": 1708190401947,
      "end": 1708190401965,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708190401965,
      "end": 1708190401965,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708190401965,
      "end": 1708190401965,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708190401965,
      "end": 1708190401965,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708190401965,
      "end": 1708190401965,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708190401965,
      "end": 1708190401965,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"/workspace/Kubernetes-Bootcamp/node_modules/@nuxt-themes/elements/components/globals/ButtonLink.vue\").then(r => r.default))",
      "start": 1708190401965,
      "end": 1708190401966,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1708190401966,
      "end": 1708190401966,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708190401966,
      "end": 1708190401966,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1708190401966,
      "end": 1708190401966,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1708190401966,
      "end": 1708190401966,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708190401966,
      "end": 1708190401966,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708190401966,
      "end": 1708190401966,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708190401966,
      "end": 1708190401966,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708190401967,
      "end": 1708190401967,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708190401967,
      "end": 1708190401967,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708190401967,
      "end": 1708190401967,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708190401967,
      "end": 1708190401967,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708190401967,
      "end": 1708190401967,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708190401967,
      "end": 1708190401968,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708190401967,
      "end": 1708190401968,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708190401969,
      "end": 1708190401969,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708190401969,
      "end": 1708190401969,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708190401969,
      "end": 1708190401969,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708190401969,
      "end": 1708190401969,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1708190401969,
      "end": 1708190401969,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708190401969,
      "end": 1708190401969,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708190401970,
      "end": 1708190401970,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708190401970,
      "end": 1708190401970,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708190401970,
      "end": 1708190401970,
      "order": "normal"
    }
  ]
}
