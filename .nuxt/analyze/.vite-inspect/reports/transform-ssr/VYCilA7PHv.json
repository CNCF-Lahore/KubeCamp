{
  "resolvedId": "/workspace/Kubernetes-Bootcamp/node_modules/pinceau/dist/runtime.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, computed, watch, onScopeDispose, unref, getCurrentInstance, inject } from 'vue';\nimport { nanoid } from 'nanoid';\nimport { z as stringify, a as resolveCssProperty, c as createTokensHelper, s as set, h as get, n as normalizeConfig, w as walkTokens, p as pathToVarName, e as resolveReferences, g as resolveThemeRule } from './shared/pinceau.3988746b.mjs';\nimport { kebabCase } from 'scule';\nimport { defu } from 'defu';\n\nconst HYDRATION_SELECTOR = \".phy[--]\";\nfunction usePinceauRuntimeSheet($tokens, initialUtils = {}, colorSchemeMode, appId) {\n  const sheet = ref();\n  const utils = ref(initialUtils);\n  const cache = {};\n  const stringify$1 = (decl, loc) => stringify(\n    decl,\n    (property, value, style, selectors) => resolveCssProperty(\n      property,\n      value,\n      style,\n      selectors,\n      [],\n      { $tokens, utils: utils.value, options: { colorSchemeMode, runtime: true } },\n      loc\n    )\n  );\n  function resolveStylesheet() {\n    const global = globalThis || window;\n    let style;\n    let hydratableSheet;\n    if (global && global.document) {\n      const fullId = `pinceau-runtime${appId ? `-${appId}` : \"\"}`;\n      const doc = global.document;\n      style = doc.querySelector(`style#${fullId}`);\n      if (!style) {\n        const styleNode = doc.createElement(\"style\");\n        styleNode.id = fullId;\n        styleNode.type = \"text/css\";\n        style = doc.head.appendChild(styleNode);\n      }\n      hydratableSheet = doc.querySelector(`style#pinceau-runtime-hydratable${appId ? `-${appId}` : \"\"}`);\n    }\n    sheet.value = style?.sheet || getSSRStylesheet();\n    return hydratableSheet ? hydrateStylesheet(hydratableSheet) : void 0;\n  }\n  function hydrateStylesheet(el) {\n    const hydratableRules2 = {};\n    for (const _rule of Object.entries(el?.sheet?.cssRules || sheet.value?.cssRules || {})) {\n      const [index, rule] = _rule;\n      const uids = resolveUid(rule);\n      if (!uids || !uids.uid) {\n        continue;\n      }\n      if (!hydratableRules2[uids.uid]) {\n        hydratableRules2[uids.uid] = {};\n      }\n      const newIndex = sheet.value.insertRule(rule.cssText, Number(index));\n      hydratableRules2[uids.uid][uids.type] = sheet.value.cssRules.item(newIndex);\n    }\n    if (el) {\n      el.remove();\n    }\n    return hydratableRules2;\n  }\n  function toString() {\n    if (!sheet.value) {\n      return \"\";\n    }\n    return Object.entries(sheet.value.cssRules).reduce(\n      (acc, [, rule]) => {\n        acc += `${rule?.cssText} ` || \"\";\n        return acc;\n      },\n      \"\"\n    );\n  }\n  function pushDeclaration(uid, type, declaration, previousRule, loc) {\n    if (!Object.keys(declaration).length) {\n      return;\n    }\n    const cssText = stringify$1(\n      {\n        \"@media\": {\n          // Mark inserted declaration with unique id and type of runtime style\n          [HYDRATION_SELECTOR]: { \"--puid\": `${uid}-${type}` },\n          ...declaration\n        }\n      },\n      loc\n    );\n    if (!cssText) {\n      return;\n    }\n    if (previousRule) {\n      deleteRule(previousRule);\n    }\n    const ruleId = sheet.value.insertRule(cssText);\n    return sheet.value.cssRules[ruleId];\n  }\n  function deleteRule(rule) {\n    const ruleIndex = Object.values(sheet.value.cssRules).indexOf(rule);\n    if (typeof ruleIndex === \"undefined\" || isNaN(ruleIndex)) {\n      return;\n    }\n    try {\n      sheet.value.deleteRule(ruleIndex);\n    } catch (e) {\n    }\n  }\n  const hydratableRules = resolveStylesheet();\n  return {\n    stringify: stringify$1,\n    cache,\n    pushDeclaration,\n    deleteRule,\n    sheet,\n    toString,\n    hydratableRules\n  };\n}\nfunction getSSRStylesheet() {\n  return {\n    cssRules: [],\n    insertRule(cssText, index = this.cssRules.length) {\n      this.cssRules.splice(index, 1, { cssText });\n      return index;\n    },\n    deleteRule(index) {\n      delete this.cssRules[index];\n    }\n  };\n}\nfunction resolveUid(rule) {\n  const uidRule = rule.cssRules && rule.cssRules.length ? Object.entries(rule?.cssRules).find(([_, rule2]) => rule2.selectorText === HYDRATION_SELECTOR) : void 0;\n  if (!uidRule) {\n    return;\n  }\n  const uidRegex = /--puid:(.*)?-(c|v|p)?/m;\n  const [, uid, type] = uidRule[1].cssText.match(uidRegex);\n  if (!uid) {\n    return;\n  }\n  return { uid, type };\n}\n\nfunction usePinceauRuntimeIds(instance, classes, _) {\n  let uid;\n  const el = instance?.vnode?.el;\n  if (el && el.classList) {\n    el.classList.forEach(\n      (elClass) => {\n        if (uid) {\n          return;\n        }\n        if (elClass.startsWith(\"pc-\")) {\n          uid = elClass.split(\"pc-\")[1];\n        }\n      }\n    );\n  } else {\n    uid = nanoid(6);\n  }\n  const scopeId = instance?.vnode?.type?.__scopeId;\n  const ids = {\n    uid,\n    componentId: scopeId ? `[${scopeId}]` : \"\",\n    uniqueClassName: `pc-${uid}`\n  };\n  classes.value.c = ids.uniqueClassName;\n  return computed(() => ids);\n}\n\nfunction usePinceauThemeSheet(initialTheme, tokensHelperConfig = {}, colorSchemeMode) {\n  const sheet = ref();\n  const theme = ref(initialTheme || {});\n  tokensHelperConfig = Object.assign(\n    {\n      key: \"variable\"\n    },\n    tokensHelperConfig || {}\n  );\n  const $tokens = createTokensHelper(\n    theme,\n    tokensHelperConfig\n  );\n  let cache = {};\n  resolveStylesheet();\n  if (import.meta.hot) {\n    import.meta.hot.on(\n      \"pinceau:themeUpdate\",\n      (newTheme) => {\n        const styleNode = document.createElement(\"style\");\n        styleNode.id = \"pinceau-theme\";\n        styleNode.textContent = newTheme.css;\n        sheet.value.ownerNode.replaceWith(styleNode);\n        sheet.value = styleNode.sheet;\n        hydrateStylesheet(sheet.value.cssRules);\n      }\n    );\n  }\n  function findThemeSheet(document2) {\n    for (const sheet2 of document2.styleSheets) {\n      if (sheet2?.ownerNode?.textContent.includes(\"--pinceau-mq\")) {\n        return sheet2.ownerNode;\n      }\n    }\n  }\n  function resolveStylesheet() {\n    const global = globalThis || window;\n    if (global && global.document) {\n      let sheetElement = document.querySelector(\"#pinceau-theme\");\n      if (!sheetElement) {\n        sheetElement = findThemeSheet(document);\n      }\n      sheet.value = sheetElement?.sheet;\n      if (sheet.value) {\n        hydrateStylesheet(sheet.value?.cssRules);\n      }\n    }\n  }\n  function hydrateStylesheet(cssRules) {\n    cache = {};\n    Object.entries(cssRules || {}).forEach(\n      ([_, rule]) => {\n        if (rule?.type !== 4 && !rule?.cssText?.includes(\"--pinceau-mq\")) {\n          return false;\n        }\n        let currentTheme = \"initial\";\n        rule.cssText.match(/--([\\w-]+)\\s*:\\s*(.+?);/gm)?.forEach((match) => {\n          const [variable, value] = match.replace(\";\", \"\").split(/:\\s(.*)/s);\n          if (variable === \"--pinceau-mq\") {\n            currentTheme = value;\n            if (!cache[value]) {\n              const ruleReference = Object.entries(rule?.cssRules || {}).find(([_2, cssRule]) => cssRule?.cssText.includes(`--pinceau-mq: ${value}`))?.[1];\n              if (ruleReference) {\n                cache[value] = ruleReference;\n              }\n            }\n            return;\n          }\n          const path = [...variable.substring(2).split(\"-\")];\n          set(theme.value, path, getSetValue(path, value, variable, currentTheme));\n        });\n      }\n    );\n  }\n  function updateTheme(value) {\n    const mqKeys = Array.from(/* @__PURE__ */ new Set([\"dark\", \"light\", ...Object.keys(value?.media || {}), ...Object.keys(theme.value?.media || {})]));\n    const config = normalizeConfig(value || {}, mqKeys, true);\n    walkTokens(config, (token, _, paths) => updateToken(paths, token.value));\n  }\n  function updateToken(path, value, mq = \"initial\") {\n    if (typeof value === \"object\") {\n      Object.entries(value).forEach(([mq2, mqValue]) => updateToken(path, mqValue, mq2));\n      return;\n    }\n    const varName = pathToVarName(path);\n    if (!cache?.[mq]) {\n      createMqRule(mq);\n    }\n    const resolvedValue = resolveReferences(void 0, value, [], { $tokens });\n    set(\n      theme.value,\n      path,\n      getSetValue(path, resolvedValue, varName, mq)\n    );\n    cache?.[mq]?.style.setProperty(varName, resolvedValue);\n  }\n  function reactiveToken(path) {\n    return computed(\n      {\n        get() {\n          return get(theme.value, `${path}.value`);\n        },\n        set(v) {\n          updateToken(path, v);\n        }\n      }\n    );\n  }\n  function getSetValue(path, value, variable, mq = \"initial\") {\n    const setValue = { value, variable: `var(${variable})` };\n    const existingValue = get(theme.value, path);\n    if (existingValue && !variable.startsWith(\"--media\")) {\n      if (typeof existingValue?.value === \"object\") {\n        setValue.value = { ...existingValue.value, [mq]: value };\n      } else {\n        setValue.value = { initial: existingValue.value, [mq]: value };\n      }\n    }\n    return setValue;\n  }\n  function createMqRule(mq) {\n    if (cache?.[mq]) {\n      return cache?.[mq];\n    }\n    const mqRule = resolveThemeRule(mq, \"\", theme.value, colorSchemeMode);\n    const newRule = sheet.value.insertRule(mqRule, sheet.value.cssRules.length);\n    cache[mq] = sheet.value.cssRules.item(newRule).cssRules[0];\n    return cache[mq];\n  }\n  return {\n    $tokens,\n    updateToken,\n    updateTheme,\n    reactiveToken,\n    resolveStylesheet,\n    theme\n  };\n}\n\nfunction usePinceauComputedStyles(ids, computedStyles, sheet, loc) {\n  let rule = sheet.hydratableRules?.[ids.value.uid]?.c;\n  watch(\n    () => computedStyles,\n    (newComputedStyles) => {\n      newComputedStyles = computedStylesToDeclaration(ids.value, newComputedStyles);\n      rule = sheet.pushDeclaration(\n        ids.value.uid,\n        \"c\",\n        newComputedStyles,\n        rule,\n        { ...loc, type: \"c\" }\n      );\n    },\n    {\n      immediate: !rule,\n      deep: true\n    }\n  );\n  onScopeDispose(() => rule && sheet.deleteRule(rule));\n}\nfunction computedStylesToDeclaration(ids, computedStyles) {\n  const declaration = {};\n  const targetId = `.${ids.uniqueClassName}${ids.componentId}`;\n  if (computedStyles && Object.keys(computedStyles).length) {\n    declaration[targetId] = declaration[targetId] || {};\n    for (const [varName, _value] of Object.entries(computedStyles)) {\n      const value = unref(_value);\n      if (varName === \"css\") {\n        declaration[targetId] = Object.assign(declaration[targetId], value);\n        continue;\n      }\n      if (typeof value === \"object\") {\n        for (const [mqId, mqPropValue] of Object.entries(value)) {\n          const _value2 = unref(mqPropValue);\n          if (!_value2) {\n            continue;\n          }\n          if (mqId === \"initial\") {\n            if (!declaration[targetId]) {\n              declaration[targetId] = {};\n            }\n            if (!declaration[targetId]) {\n              declaration[targetId] = {};\n            }\n            declaration[targetId][`--${varName}`] = _value2;\n          }\n          const mediaId = `@${mqId}`;\n          if (!declaration[mediaId]) {\n            declaration[mediaId] = {};\n          }\n          if (!declaration[mediaId][targetId]) {\n            declaration[mediaId][targetId] = {};\n          }\n          declaration[mediaId][targetId][`--${kebabCase(varName)}`] = _value2;\n        }\n      } else {\n        const _value2 = unref(value);\n        if (_value2) {\n          declaration[targetId][`--${kebabCase(varName)}`] = _value2;\n        }\n      }\n    }\n  }\n  return declaration;\n}\n\nconst usePinceauVariants = (ids, variants, props, sheet, classes, loc) => {\n  let rule = sheet.hydratableRules?.[ids.value.uid]?.v;\n  const variantsState = computed(() => variants ? resolveVariantsState(ids.value, props, variants) : {});\n  const variantsClasses = ref([]);\n  watch(\n    variantsState,\n    ({ cacheId, variantsProps }) => {\n      let variantClass;\n      if (sheet.cache[cacheId]) {\n        const cachedRule = sheet.cache[cacheId];\n        rule = cachedRule.rule;\n        variantClass = cachedRule.variantClass;\n        if (cachedRule?.classes) {\n          variantsClasses.value = cachedRule.classes;\n        }\n        cachedRule.count++;\n      } else {\n        variantClass = `pv-${nanoid(6)}`;\n        const { declaration, classes: classes2 } = variantsToDeclaration(variantClass, ids.value, variants, variantsProps);\n        variantsClasses.value = classes2;\n        rule = sheet.pushDeclaration(ids.value.uid, \"v\", declaration, void 0, { ...loc, type: \"v\" });\n        sheet.cache[cacheId] = { rule, variantClass, classes: classes2, count: 1 };\n      }\n      classes.value.v = variantClass;\n    },\n    {\n      immediate: true\n    }\n  );\n  onScopeDispose(\n    () => {\n      const state = variantsState?.value;\n      const cachedRule = sheet.cache?.[state.cacheId];\n      if (cachedRule) {\n        cachedRule.count--;\n        if (cachedRule.count <= 0) {\n          sheet.deleteRule(cachedRule.rule);\n          delete sheet.cache[state.cacheId];\n        }\n      }\n    }\n  );\n  return { variantsClasses };\n};\nfunction variantsToDeclaration(variantClass, ids, variants, props) {\n  let classes = [];\n  const declaration = {};\n  if (props && Object.keys(props).length) {\n    const targetId = `.${variantClass}`;\n    for (const [propName, propValue] of Object.entries(props)) {\n      if (typeof propValue === \"object\") {\n        for (const [mqId, mqPropValue] of Object.entries(propValue)) {\n          const _value = mqPropValue?.toString() || mqPropValue;\n          const variantValue = variants[propName][_value];\n          if (!variantValue) {\n            continue;\n          }\n          if (!declaration[targetId]) {\n            declaration[targetId] = {};\n          }\n          if (typeof variantValue === \"string\" || Array.isArray(variantValue) || variantValue?.$class) {\n            const classAttr = typeof variantValue === \"string\" || Array.isArray(variantValue) ? variantValue : variantValue.$class;\n            classes = [\n              ...classes,\n              ...typeof classAttr === \"string\" ? classAttr.split(\" \") : classAttr\n            ];\n            delete variantValue.$class;\n          }\n          if (mqId === \"initial\") {\n            if (!declaration[targetId]) {\n              declaration[targetId] = {};\n            }\n            declaration[targetId] = defu(declaration[targetId], variantValue);\n          }\n          const mediaId = `@${mqId}`;\n          if (!declaration[mediaId]) {\n            declaration[mediaId] = {};\n          }\n          if (!declaration[mediaId][targetId]) {\n            declaration[mediaId][targetId] = {};\n          }\n          declaration[mediaId][targetId] = defu(declaration[mediaId][targetId], variantValue);\n        }\n      } else {\n        const _value = propValue?.toString?.() || propValue;\n        const variantValue = variants?.[propName]?.[_value];\n        if (!variantValue) {\n          continue;\n        }\n        if (!declaration[targetId]) {\n          declaration[targetId] = {};\n        }\n        declaration[targetId] = defu(declaration[targetId], variantValue);\n      }\n    }\n  }\n  return { declaration, classes };\n}\nfunction resolveVariantsState(ids, props, variants) {\n  if (!props || !variants) {\n    return {};\n  }\n  let cacheId = ids.componentId;\n  const variantsProps = Object.entries(props).reduce(\n    (acc, [propName, propValue]) => {\n      if (!variants[propName]) {\n        return acc;\n      }\n      if (typeof propValue === \"object\") {\n        Object.entries(propValue).forEach(([key, value]) => cacheId += `${propName}:${key}:${value}|`);\n      } else {\n        cacheId += `${propName}:${propValue}|`;\n      }\n      acc[propName] = propValue;\n      return acc;\n    },\n    {}\n  );\n  return { cacheId, variantsProps };\n}\n\nfunction usePinceauCssProp(ids, props, sheet, loc) {\n  let rule = sheet.hydratableRules?.[ids.value.uid]?.p;\n  const css = computed(() => props?.css);\n  watch(\n    css,\n    (newCss) => {\n      newCss = transformCssPropToDeclaration(ids.value, newCss);\n      if (rule) {\n        sheet.deleteRule(rule);\n      }\n      rule = sheet.pushDeclaration(\n        ids.value.uid,\n        \"p\",\n        newCss,\n        rule,\n        { ...loc, type: \"c\" }\n      );\n    },\n    {\n      immediate: !rule\n    }\n  );\n  onScopeDispose(() => rule && sheet.deleteRule(rule));\n}\nfunction transformCssPropToDeclaration(ids, css) {\n  const declaration = {};\n  if (css) {\n    const targetId = `.${ids.uniqueClassName}${ids.componentId}`;\n    declaration[targetId] = Object.assign(declaration[targetId] || {}, css);\n  }\n  return declaration;\n}\n\nconst defaultRuntimeOptions = {\n  theme: {},\n  utils: {},\n  tokensHelperConfig: {},\n  multiApp: false,\n  colorSchemeMode: \"media\",\n  dev: process.env.NODE_ENV !== \"production\"\n};\nconst plugin = {\n  install(app, options) {\n    options = Object.assign(defaultRuntimeOptions, options);\n    const { theme, tokensHelperConfig, dev, multiApp, colorSchemeMode, utils } = options;\n    const themeSheet = usePinceauThemeSheet(theme, tokensHelperConfig, colorSchemeMode);\n    if (dev && (import.meta.hot || process.server)) {\n      import('./chunks/debug.mjs').then(({ usePinceauRuntimeDebug }) => usePinceauRuntimeDebug(tokensHelperConfig));\n    }\n    const multiAppId = multiApp ? nanoid(6) : void 0;\n    const runtimeSheet = usePinceauRuntimeSheet(themeSheet.$tokens, utils, colorSchemeMode, multiAppId);\n    function usePinceauRuntime(props = {}, variants, computedStyles) {\n      const instance = getCurrentInstance();\n      let loc;\n      if (dev && (import.meta.hot || process.server)) {\n        const { __file: file, __name: name } = instance.vnode.type;\n        loc = { file, name };\n      }\n      const classes = ref({\n        // Variants class\n        v: \"\",\n        // Unique class\n        c: \"\"\n      });\n      const ids = usePinceauRuntimeIds(instance, classes);\n      if (computedStyles && Object.keys(computedStyles).length > 0) {\n        usePinceauComputedStyles(ids, computedStyles, runtimeSheet, loc);\n      }\n      let dynamicVariantClasses;\n      if (variants && Object.keys(variants).length > 0) {\n        const { variantsClasses } = usePinceauVariants(ids, variants, props, runtimeSheet, classes, loc);\n        dynamicVariantClasses = variantsClasses;\n      }\n      if (props?.css && Object.keys(props?.css).length > 0) {\n        usePinceauCssProp(ids, props, runtimeSheet, loc);\n      }\n      return { $pinceau: computed(() => [classes.value.v, classes.value.c, dynamicVariantClasses?.value?.join(\" \")].join(\" \")) };\n    }\n    app.config.globalProperties.$pinceauRuntime = usePinceauRuntime;\n    app.config.globalProperties.$pinceauTheme = themeSheet;\n    app.config.globalProperties.$pinceauSsr = { get: () => runtimeSheet.toString() };\n    app.provide(\"pinceauRuntime\", usePinceauRuntime);\n    app.provide(\"pinceauTheme\", themeSheet);\n  }\n};\n\nfunction usePinceauRuntime(props, variants, computedStyles) {\n  return inject(\"pinceauRuntime\")(props, variants, computedStyles);\n}\nfunction usePinceauTheme() {\n  return inject(\"pinceauTheme\");\n}\nconst cssProp = {\n  type: Object,\n  required: false,\n  default: {}\n};\nfunction computedStyle(defaultValue, required = false) {\n  return {\n    type: [String, Object],\n    default: defaultValue,\n    required\n  };\n}\n\nexport { computedStyle, createTokensHelper, cssProp, plugin, resolveCssProperty, stringify, usePinceauRuntime, usePinceauTheme };\n",
      "start": 1708178212069,
      "end": 1708178212132,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "pre"
    },
    {
      "name": "pinceau-transforms",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1708178212133,
      "end": 1708178212133,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { ref, computed, watch, onScopeDispose, unref, getCurrentInstance, inject } from \"vue\";\nimport { nanoid } from \"nanoid\";\nimport { z as stringify, a as resolveCssProperty, c as createTokensHelper, s as set, h as get, n as normalizeConfig, w as walkTokens, p as pathToVarName, e as resolveReferences, g as resolveThemeRule } from \"./shared/pinceau.3988746b.mjs\";\nimport { kebabCase } from \"scule\";\nimport { defu } from \"defu\";\nconst HYDRATION_SELECTOR = \".phy[--]\";\nfunction usePinceauRuntimeSheet($tokens, initialUtils = {}, colorSchemeMode, appId) {\n  const sheet = ref();\n  const utils = ref(initialUtils);\n  const cache = {};\n  const stringify$1 = (decl, loc) => stringify(\n    decl,\n    (property, value, style, selectors) => resolveCssProperty(\n      property,\n      value,\n      style,\n      selectors,\n      [],\n      { $tokens, utils: utils.value, options: { colorSchemeMode, runtime: true } },\n      loc\n    )\n  );\n  function resolveStylesheet() {\n    const global = globalThis || void 0;\n    let style;\n    let hydratableSheet;\n    if (global && global.document) {\n      const fullId = `pinceau-runtime${appId ? `-${appId}` : \"\"}`;\n      const doc = global.document;\n      style = doc.querySelector(`style#${fullId}`);\n      if (!style) {\n        const styleNode = doc.createElement(\"style\");\n        styleNode.id = fullId;\n        styleNode.type = \"text/css\";\n        style = doc.head.appendChild(styleNode);\n      }\n      hydratableSheet = doc.querySelector(`style#pinceau-runtime-hydratable${appId ? `-${appId}` : \"\"}`);\n    }\n    sheet.value = style?.sheet || getSSRStylesheet();\n    return hydratableSheet ? hydrateStylesheet(hydratableSheet) : void 0;\n  }\n  function hydrateStylesheet(el) {\n    const hydratableRules2 = {};\n    for (const _rule of Object.entries(el?.sheet?.cssRules || sheet.value?.cssRules || {})) {\n      const [index, rule] = _rule;\n      const uids = resolveUid(rule);\n      if (!uids || !uids.uid) {\n        continue;\n      }\n      if (!hydratableRules2[uids.uid]) {\n        hydratableRules2[uids.uid] = {};\n      }\n      const newIndex = sheet.value.insertRule(rule.cssText, Number(index));\n      hydratableRules2[uids.uid][uids.type] = sheet.value.cssRules.item(newIndex);\n    }\n    if (el) {\n      el.remove();\n    }\n    return hydratableRules2;\n  }\n  function toString() {\n    if (!sheet.value) {\n      return \"\";\n    }\n    return Object.entries(sheet.value.cssRules).reduce(\n      (acc, [, rule]) => {\n        acc += `${rule?.cssText} ` || \"\";\n        return acc;\n      },\n      \"\"\n    );\n  }\n  function pushDeclaration(uid, type, declaration, previousRule, loc) {\n    if (!Object.keys(declaration).length) {\n      return;\n    }\n    const cssText = stringify$1(\n      {\n        \"@media\": {\n          // Mark inserted declaration with unique id and type of runtime style\n          [HYDRATION_SELECTOR]: { \"--puid\": `${uid}-${type}` },\n          ...declaration\n        }\n      },\n      loc\n    );\n    if (!cssText) {\n      return;\n    }\n    if (previousRule) {\n      deleteRule(previousRule);\n    }\n    const ruleId = sheet.value.insertRule(cssText);\n    return sheet.value.cssRules[ruleId];\n  }\n  function deleteRule(rule) {\n    const ruleIndex = Object.values(sheet.value.cssRules).indexOf(rule);\n    if (typeof ruleIndex === \"undefined\" || isNaN(ruleIndex)) {\n      return;\n    }\n    try {\n      sheet.value.deleteRule(ruleIndex);\n    } catch (e) {\n    }\n  }\n  const hydratableRules = resolveStylesheet();\n  return {\n    stringify: stringify$1,\n    cache,\n    pushDeclaration,\n    deleteRule,\n    sheet,\n    toString,\n    hydratableRules\n  };\n}\nfunction getSSRStylesheet() {\n  return {\n    cssRules: [],\n    insertRule(cssText, index = this.cssRules.length) {\n      this.cssRules.splice(index, 1, { cssText });\n      return index;\n    },\n    deleteRule(index) {\n      delete this.cssRules[index];\n    }\n  };\n}\nfunction resolveUid(rule) {\n  const uidRule = rule.cssRules && rule.cssRules.length ? Object.entries(rule?.cssRules).find(([_, rule2]) => rule2.selectorText === HYDRATION_SELECTOR) : void 0;\n  if (!uidRule) {\n    return;\n  }\n  const uidRegex = /--puid:(.*)?-(c|v|p)?/m;\n  const [, uid, type] = uidRule[1].cssText.match(uidRegex);\n  if (!uid) {\n    return;\n  }\n  return { uid, type };\n}\nfunction usePinceauRuntimeIds(instance, classes, _) {\n  let uid;\n  const el = instance?.vnode?.el;\n  if (el && el.classList) {\n    el.classList.forEach(\n      (elClass) => {\n        if (uid) {\n          return;\n        }\n        if (elClass.startsWith(\"pc-\")) {\n          uid = elClass.split(\"pc-\")[1];\n        }\n      }\n    );\n  } else {\n    uid = nanoid(6);\n  }\n  const scopeId = instance?.vnode?.type?.__scopeId;\n  const ids = {\n    uid,\n    componentId: scopeId ? `[${scopeId}]` : \"\",\n    uniqueClassName: `pc-${uid}`\n  };\n  classes.value.c = ids.uniqueClassName;\n  return computed(() => ids);\n}\nfunction usePinceauThemeSheet(initialTheme, tokensHelperConfig = {}, colorSchemeMode) {\n  const sheet = ref();\n  const theme = ref(initialTheme || {});\n  tokensHelperConfig = Object.assign(\n    {\n      key: \"variable\"\n    },\n    tokensHelperConfig || {}\n  );\n  const $tokens = createTokensHelper(\n    theme,\n    tokensHelperConfig\n  );\n  let cache = {};\n  resolveStylesheet();\n  if (void 0) {\n    (void 0).on(\n      \"pinceau:themeUpdate\",\n      (newTheme) => {\n        const styleNode = (void 0).createElement(\"style\");\n        styleNode.id = \"pinceau-theme\";\n        styleNode.textContent = newTheme.css;\n        sheet.value.ownerNode.replaceWith(styleNode);\n        sheet.value = styleNode.sheet;\n        hydrateStylesheet(sheet.value.cssRules);\n      }\n    );\n  }\n  function findThemeSheet(document2) {\n    for (const sheet2 of document2.styleSheets) {\n      if (sheet2?.ownerNode?.textContent.includes(\"--pinceau-mq\")) {\n        return sheet2.ownerNode;\n      }\n    }\n  }\n  function resolveStylesheet() {\n    const global = globalThis || void 0;\n    if (global && global.document) {\n      let sheetElement = (void 0).querySelector(\"#pinceau-theme\");\n      if (!sheetElement) {\n        sheetElement = findThemeSheet(void 0);\n      }\n      sheet.value = sheetElement?.sheet;\n      if (sheet.value) {\n        hydrateStylesheet(sheet.value?.cssRules);\n      }\n    }\n  }\n  function hydrateStylesheet(cssRules) {\n    cache = {};\n    Object.entries(cssRules || {}).forEach(\n      ([_, rule]) => {\n        if (rule?.type !== 4 && !rule?.cssText?.includes(\"--pinceau-mq\")) {\n          return false;\n        }\n        let currentTheme = \"initial\";\n        rule.cssText.match(/--([\\w-]+)\\s*:\\s*(.+?);/gm)?.forEach((match) => {\n          const [variable, value] = match.replace(\";\", \"\").split(/:\\s(.*)/s);\n          if (variable === \"--pinceau-mq\") {\n            currentTheme = value;\n            if (!cache[value]) {\n              const ruleReference = Object.entries(rule?.cssRules || {}).find(([_2, cssRule]) => cssRule?.cssText.includes(`--pinceau-mq: ${value}`))?.[1];\n              if (ruleReference) {\n                cache[value] = ruleReference;\n              }\n            }\n            return;\n          }\n          const path = [...variable.substring(2).split(\"-\")];\n          set(theme.value, path, getSetValue(path, value, variable, currentTheme));\n        });\n      }\n    );\n  }\n  function updateTheme(value) {\n    const mqKeys = Array.from(/* @__PURE__ */ new Set([\"dark\", \"light\", ...Object.keys(value?.media || {}), ...Object.keys(theme.value?.media || {})]));\n    const config = normalizeConfig(value || {}, mqKeys, true);\n    walkTokens(config, (token, _, paths) => updateToken(paths, token.value));\n  }\n  function updateToken(path, value, mq = \"initial\") {\n    if (typeof value === \"object\") {\n      Object.entries(value).forEach(([mq2, mqValue]) => updateToken(path, mqValue, mq2));\n      return;\n    }\n    const varName = pathToVarName(path);\n    if (!cache?.[mq]) {\n      createMqRule(mq);\n    }\n    const resolvedValue = resolveReferences(void 0, value, [], { $tokens });\n    set(\n      theme.value,\n      path,\n      getSetValue(path, resolvedValue, varName, mq)\n    );\n    cache?.[mq]?.style.setProperty(varName, resolvedValue);\n  }\n  function reactiveToken(path) {\n    return computed(\n      {\n        get() {\n          return get(theme.value, `${path}.value`);\n        },\n        set(v) {\n          updateToken(path, v);\n        }\n      }\n    );\n  }\n  function getSetValue(path, value, variable, mq = \"initial\") {\n    const setValue = { value, variable: `var(${variable})` };\n    const existingValue = get(theme.value, path);\n    if (existingValue && !variable.startsWith(\"--media\")) {\n      if (typeof existingValue?.value === \"object\") {\n        setValue.value = { ...existingValue.value, [mq]: value };\n      } else {\n        setValue.value = { initial: existingValue.value, [mq]: value };\n      }\n    }\n    return setValue;\n  }\n  function createMqRule(mq) {\n    if (cache?.[mq]) {\n      return cache?.[mq];\n    }\n    const mqRule = resolveThemeRule(mq, \"\", theme.value, colorSchemeMode);\n    const newRule = sheet.value.insertRule(mqRule, sheet.value.cssRules.length);\n    cache[mq] = sheet.value.cssRules.item(newRule).cssRules[0];\n    return cache[mq];\n  }\n  return {\n    $tokens,\n    updateToken,\n    updateTheme,\n    reactiveToken,\n    resolveStylesheet,\n    theme\n  };\n}\nfunction usePinceauComputedStyles(ids, computedStyles, sheet, loc) {\n  let rule = sheet.hydratableRules?.[ids.value.uid]?.c;\n  watch(\n    () => computedStyles,\n    (newComputedStyles) => {\n      newComputedStyles = computedStylesToDeclaration(ids.value, newComputedStyles);\n      rule = sheet.pushDeclaration(\n        ids.value.uid,\n        \"c\",\n        newComputedStyles,\n        rule,\n        { ...loc, type: \"c\" }\n      );\n    },\n    {\n      immediate: !rule,\n      deep: true\n    }\n  );\n  onScopeDispose(() => rule && sheet.deleteRule(rule));\n}\nfunction computedStylesToDeclaration(ids, computedStyles) {\n  const declaration = {};\n  const targetId = `.${ids.uniqueClassName}${ids.componentId}`;\n  if (computedStyles && Object.keys(computedStyles).length) {\n    declaration[targetId] = declaration[targetId] || {};\n    for (const [varName, _value] of Object.entries(computedStyles)) {\n      const value = unref(_value);\n      if (varName === \"css\") {\n        declaration[targetId] = Object.assign(declaration[targetId], value);\n        continue;\n      }\n      if (typeof value === \"object\") {\n        for (const [mqId, mqPropValue] of Object.entries(value)) {\n          const _value2 = unref(mqPropValue);\n          if (!_value2) {\n            continue;\n          }\n          if (mqId === \"initial\") {\n            if (!declaration[targetId]) {\n              declaration[targetId] = {};\n            }\n            if (!declaration[targetId]) {\n              declaration[targetId] = {};\n            }\n            declaration[targetId][`--${varName}`] = _value2;\n          }\n          const mediaId = `@${mqId}`;\n          if (!declaration[mediaId]) {\n            declaration[mediaId] = {};\n          }\n          if (!declaration[mediaId][targetId]) {\n            declaration[mediaId][targetId] = {};\n          }\n          declaration[mediaId][targetId][`--${kebabCase(varName)}`] = _value2;\n        }\n      } else {\n        const _value2 = unref(value);\n        if (_value2) {\n          declaration[targetId][`--${kebabCase(varName)}`] = _value2;\n        }\n      }\n    }\n  }\n  return declaration;\n}\nconst usePinceauVariants = (ids, variants, props, sheet, classes, loc) => {\n  let rule = sheet.hydratableRules?.[ids.value.uid]?.v;\n  const variantsState = computed(() => variants ? resolveVariantsState(ids.value, props, variants) : {});\n  const variantsClasses = ref([]);\n  watch(\n    variantsState,\n    ({ cacheId, variantsProps }) => {\n      let variantClass;\n      if (sheet.cache[cacheId]) {\n        const cachedRule = sheet.cache[cacheId];\n        rule = cachedRule.rule;\n        variantClass = cachedRule.variantClass;\n        if (cachedRule?.classes) {\n          variantsClasses.value = cachedRule.classes;\n        }\n        cachedRule.count++;\n      } else {\n        variantClass = `pv-${nanoid(6)}`;\n        const { declaration, classes: classes2 } = variantsToDeclaration(variantClass, ids.value, variants, variantsProps);\n        variantsClasses.value = classes2;\n        rule = sheet.pushDeclaration(ids.value.uid, \"v\", declaration, void 0, { ...loc, type: \"v\" });\n        sheet.cache[cacheId] = { rule, variantClass, classes: classes2, count: 1 };\n      }\n      classes.value.v = variantClass;\n    },\n    {\n      immediate: true\n    }\n  );\n  onScopeDispose(\n    () => {\n      const state = variantsState?.value;\n      const cachedRule = sheet.cache?.[state.cacheId];\n      if (cachedRule) {\n        cachedRule.count--;\n        if (cachedRule.count <= 0) {\n          sheet.deleteRule(cachedRule.rule);\n          delete sheet.cache[state.cacheId];\n        }\n      }\n    }\n  );\n  return { variantsClasses };\n};\nfunction variantsToDeclaration(variantClass, ids, variants, props) {\n  let classes = [];\n  const declaration = {};\n  if (props && Object.keys(props).length) {\n    const targetId = `.${variantClass}`;\n    for (const [propName, propValue] of Object.entries(props)) {\n      if (typeof propValue === \"object\") {\n        for (const [mqId, mqPropValue] of Object.entries(propValue)) {\n          const _value = mqPropValue?.toString() || mqPropValue;\n          const variantValue = variants[propName][_value];\n          if (!variantValue) {\n            continue;\n          }\n          if (!declaration[targetId]) {\n            declaration[targetId] = {};\n          }\n          if (typeof variantValue === \"string\" || Array.isArray(variantValue) || variantValue?.$class) {\n            const classAttr = typeof variantValue === \"string\" || Array.isArray(variantValue) ? variantValue : variantValue.$class;\n            classes = [\n              ...classes,\n              ...typeof classAttr === \"string\" ? classAttr.split(\" \") : classAttr\n            ];\n            delete variantValue.$class;\n          }\n          if (mqId === \"initial\") {\n            if (!declaration[targetId]) {\n              declaration[targetId] = {};\n            }\n            declaration[targetId] = defu(declaration[targetId], variantValue);\n          }\n          const mediaId = `@${mqId}`;\n          if (!declaration[mediaId]) {\n            declaration[mediaId] = {};\n          }\n          if (!declaration[mediaId][targetId]) {\n            declaration[mediaId][targetId] = {};\n          }\n          declaration[mediaId][targetId] = defu(declaration[mediaId][targetId], variantValue);\n        }\n      } else {\n        const _value = propValue?.toString?.() || propValue;\n        const variantValue = variants?.[propName]?.[_value];\n        if (!variantValue) {\n          continue;\n        }\n        if (!declaration[targetId]) {\n          declaration[targetId] = {};\n        }\n        declaration[targetId] = defu(declaration[targetId], variantValue);\n      }\n    }\n  }\n  return { declaration, classes };\n}\nfunction resolveVariantsState(ids, props, variants) {\n  if (!props || !variants) {\n    return {};\n  }\n  let cacheId = ids.componentId;\n  const variantsProps = Object.entries(props).reduce(\n    (acc, [propName, propValue]) => {\n      if (!variants[propName]) {\n        return acc;\n      }\n      if (typeof propValue === \"object\") {\n        Object.entries(propValue).forEach(([key, value]) => cacheId += `${propName}:${key}:${value}|`);\n      } else {\n        cacheId += `${propName}:${propValue}|`;\n      }\n      acc[propName] = propValue;\n      return acc;\n    },\n    {}\n  );\n  return { cacheId, variantsProps };\n}\nfunction usePinceauCssProp(ids, props, sheet, loc) {\n  let rule = sheet.hydratableRules?.[ids.value.uid]?.p;\n  const css = computed(() => props?.css);\n  watch(\n    css,\n    (newCss) => {\n      newCss = transformCssPropToDeclaration(ids.value, newCss);\n      if (rule) {\n        sheet.deleteRule(rule);\n      }\n      rule = sheet.pushDeclaration(\n        ids.value.uid,\n        \"p\",\n        newCss,\n        rule,\n        { ...loc, type: \"c\" }\n      );\n    },\n    {\n      immediate: !rule\n    }\n  );\n  onScopeDispose(() => rule && sheet.deleteRule(rule));\n}\nfunction transformCssPropToDeclaration(ids, css) {\n  const declaration = {};\n  if (css) {\n    const targetId = `.${ids.uniqueClassName}${ids.componentId}`;\n    declaration[targetId] = Object.assign(declaration[targetId] || {}, css);\n  }\n  return declaration;\n}\nconst defaultRuntimeOptions = {\n  theme: {},\n  utils: {},\n  tokensHelperConfig: {},\n  multiApp: false,\n  colorSchemeMode: \"media\",\n  dev: process.env.NODE_ENV !== \"production\"\n};\nconst plugin = {\n  install(app, options) {\n    options = Object.assign(defaultRuntimeOptions, options);\n    const { theme, tokensHelperConfig, dev, multiApp, colorSchemeMode, utils } = options;\n    const themeSheet = usePinceauThemeSheet(theme, tokensHelperConfig, colorSchemeMode);\n    if (dev && true) {\n      import(\"./chunks/debug.mjs\").then(({ usePinceauRuntimeDebug }) => usePinceauRuntimeDebug(tokensHelperConfig));\n    }\n    const multiAppId = multiApp ? nanoid(6) : void 0;\n    const runtimeSheet = usePinceauRuntimeSheet(themeSheet.$tokens, utils, colorSchemeMode, multiAppId);\n    function usePinceauRuntime2(props = {}, variants, computedStyles) {\n      const instance = getCurrentInstance();\n      let loc;\n      if (dev && true) {\n        const { __file: file, __name: name } = instance.vnode.type;\n        loc = { file, name };\n      }\n      const classes = ref({\n        // Variants class\n        v: \"\",\n        // Unique class\n        c: \"\"\n      });\n      const ids = usePinceauRuntimeIds(instance, classes);\n      if (computedStyles && Object.keys(computedStyles).length > 0) {\n        usePinceauComputedStyles(ids, computedStyles, runtimeSheet, loc);\n      }\n      let dynamicVariantClasses;\n      if (variants && Object.keys(variants).length > 0) {\n        const { variantsClasses } = usePinceauVariants(ids, variants, props, runtimeSheet, classes, loc);\n        dynamicVariantClasses = variantsClasses;\n      }\n      if (props?.css && Object.keys(props?.css).length > 0) {\n        usePinceauCssProp(ids, props, runtimeSheet, loc);\n      }\n      return { $pinceau: computed(() => [classes.value.v, classes.value.c, dynamicVariantClasses?.value?.join(\" \")].join(\" \")) };\n    }\n    app.config.globalProperties.$pinceauRuntime = usePinceauRuntime2;\n    app.config.globalProperties.$pinceauTheme = themeSheet;\n    app.config.globalProperties.$pinceauSsr = { get: () => runtimeSheet.toString() };\n    app.provide(\"pinceauRuntime\", usePinceauRuntime2);\n    app.provide(\"pinceauTheme\", themeSheet);\n  }\n};\nfunction usePinceauRuntime(props, variants, computedStyles) {\n  return inject(\"pinceauRuntime\")(props, variants, computedStyles);\n}\nfunction usePinceauTheme() {\n  return inject(\"pinceauTheme\");\n}\nconst cssProp = {\n  type: Object,\n  required: false,\n  default: {}\n};\nfunction computedStyle(defaultValue, required = false) {\n  return {\n    type: [String, Object],\n    default: defaultValue,\n    required\n  };\n}\nexport { computedStyle, createTokensHelper, cssProp, plugin, resolveCssProperty, stringify, usePinceauRuntime, usePinceauTheme };\n",
      "start": 1708178212133,
      "end": 1708178212177,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/workspace/Kubernetes-Bootcamp/node_modules/pinceau/dist/runtime.mjs\"],\n  \"sourcesContent\": [\"import { ref, computed, watch, onScopeDispose, unref, getCurrentInstance, inject } from 'vue';\\nimport { nanoid } from 'nanoid';\\nimport { z as stringify, a as resolveCssProperty, c as createTokensHelper, s as set, h as get, n as normalizeConfig, w as walkTokens, p as pathToVarName, e as resolveReferences, g as resolveThemeRule } from './shared/pinceau.3988746b.mjs';\\nimport { kebabCase } from 'scule';\\nimport { defu } from 'defu';\\n\\nconst HYDRATION_SELECTOR = \\\".phy[--]\\\";\\nfunction usePinceauRuntimeSheet($tokens, initialUtils = {}, colorSchemeMode, appId) {\\n  const sheet = ref();\\n  const utils = ref(initialUtils);\\n  const cache = {};\\n  const stringify$1 = (decl, loc) => stringify(\\n    decl,\\n    (property, value, style, selectors) => resolveCssProperty(\\n      property,\\n      value,\\n      style,\\n      selectors,\\n      [],\\n      { $tokens, utils: utils.value, options: { colorSchemeMode, runtime: true } },\\n      loc\\n    )\\n  );\\n  function resolveStylesheet() {\\n    const global = globalThis || window;\\n    let style;\\n    let hydratableSheet;\\n    if (global && global.document) {\\n      const fullId = `pinceau-runtime${appId ? `-${appId}` : \\\"\\\"}`;\\n      const doc = global.document;\\n      style = doc.querySelector(`style#${fullId}`);\\n      if (!style) {\\n        const styleNode = doc.createElement(\\\"style\\\");\\n        styleNode.id = fullId;\\n        styleNode.type = \\\"text/css\\\";\\n        style = doc.head.appendChild(styleNode);\\n      }\\n      hydratableSheet = doc.querySelector(`style#pinceau-runtime-hydratable${appId ? `-${appId}` : \\\"\\\"}`);\\n    }\\n    sheet.value = style?.sheet || getSSRStylesheet();\\n    return hydratableSheet ? hydrateStylesheet(hydratableSheet) : void 0;\\n  }\\n  function hydrateStylesheet(el) {\\n    const hydratableRules2 = {};\\n    for (const _rule of Object.entries(el?.sheet?.cssRules || sheet.value?.cssRules || {})) {\\n      const [index, rule] = _rule;\\n      const uids = resolveUid(rule);\\n      if (!uids || !uids.uid) {\\n        continue;\\n      }\\n      if (!hydratableRules2[uids.uid]) {\\n        hydratableRules2[uids.uid] = {};\\n      }\\n      const newIndex = sheet.value.insertRule(rule.cssText, Number(index));\\n      hydratableRules2[uids.uid][uids.type] = sheet.value.cssRules.item(newIndex);\\n    }\\n    if (el) {\\n      el.remove();\\n    }\\n    return hydratableRules2;\\n  }\\n  function toString() {\\n    if (!sheet.value) {\\n      return \\\"\\\";\\n    }\\n    return Object.entries(sheet.value.cssRules).reduce(\\n      (acc, [, rule]) => {\\n        acc += `${rule?.cssText} ` || \\\"\\\";\\n        return acc;\\n      },\\n      \\\"\\\"\\n    );\\n  }\\n  function pushDeclaration(uid, type, declaration, previousRule, loc) {\\n    if (!Object.keys(declaration).length) {\\n      return;\\n    }\\n    const cssText = stringify$1(\\n      {\\n        \\\"@media\\\": {\\n          // Mark inserted declaration with unique id and type of runtime style\\n          [HYDRATION_SELECTOR]: { \\\"--puid\\\": `${uid}-${type}` },\\n          ...declaration\\n        }\\n      },\\n      loc\\n    );\\n    if (!cssText) {\\n      return;\\n    }\\n    if (previousRule) {\\n      deleteRule(previousRule);\\n    }\\n    const ruleId = sheet.value.insertRule(cssText);\\n    return sheet.value.cssRules[ruleId];\\n  }\\n  function deleteRule(rule) {\\n    const ruleIndex = Object.values(sheet.value.cssRules).indexOf(rule);\\n    if (typeof ruleIndex === \\\"undefined\\\" || isNaN(ruleIndex)) {\\n      return;\\n    }\\n    try {\\n      sheet.value.deleteRule(ruleIndex);\\n    } catch (e) {\\n    }\\n  }\\n  const hydratableRules = resolveStylesheet();\\n  return {\\n    stringify: stringify$1,\\n    cache,\\n    pushDeclaration,\\n    deleteRule,\\n    sheet,\\n    toString,\\n    hydratableRules\\n  };\\n}\\nfunction getSSRStylesheet() {\\n  return {\\n    cssRules: [],\\n    insertRule(cssText, index = this.cssRules.length) {\\n      this.cssRules.splice(index, 1, { cssText });\\n      return index;\\n    },\\n    deleteRule(index) {\\n      delete this.cssRules[index];\\n    }\\n  };\\n}\\nfunction resolveUid(rule) {\\n  const uidRule = rule.cssRules && rule.cssRules.length ? Object.entries(rule?.cssRules).find(([_, rule2]) => rule2.selectorText === HYDRATION_SELECTOR) : void 0;\\n  if (!uidRule) {\\n    return;\\n  }\\n  const uidRegex = /--puid:(.*)?-(c|v|p)?/m;\\n  const [, uid, type] = uidRule[1].cssText.match(uidRegex);\\n  if (!uid) {\\n    return;\\n  }\\n  return { uid, type };\\n}\\n\\nfunction usePinceauRuntimeIds(instance, classes, _) {\\n  let uid;\\n  const el = instance?.vnode?.el;\\n  if (el && el.classList) {\\n    el.classList.forEach(\\n      (elClass) => {\\n        if (uid) {\\n          return;\\n        }\\n        if (elClass.startsWith(\\\"pc-\\\")) {\\n          uid = elClass.split(\\\"pc-\\\")[1];\\n        }\\n      }\\n    );\\n  } else {\\n    uid = nanoid(6);\\n  }\\n  const scopeId = instance?.vnode?.type?.__scopeId;\\n  const ids = {\\n    uid,\\n    componentId: scopeId ? `[${scopeId}]` : \\\"\\\",\\n    uniqueClassName: `pc-${uid}`\\n  };\\n  classes.value.c = ids.uniqueClassName;\\n  return computed(() => ids);\\n}\\n\\nfunction usePinceauThemeSheet(initialTheme, tokensHelperConfig = {}, colorSchemeMode) {\\n  const sheet = ref();\\n  const theme = ref(initialTheme || {});\\n  tokensHelperConfig = Object.assign(\\n    {\\n      key: \\\"variable\\\"\\n    },\\n    tokensHelperConfig || {}\\n  );\\n  const $tokens = createTokensHelper(\\n    theme,\\n    tokensHelperConfig\\n  );\\n  let cache = {};\\n  resolveStylesheet();\\n  if (import.meta.hot) {\\n    import.meta.hot.on(\\n      \\\"pinceau:themeUpdate\\\",\\n      (newTheme) => {\\n        const styleNode = document.createElement(\\\"style\\\");\\n        styleNode.id = \\\"pinceau-theme\\\";\\n        styleNode.textContent = newTheme.css;\\n        sheet.value.ownerNode.replaceWith(styleNode);\\n        sheet.value = styleNode.sheet;\\n        hydrateStylesheet(sheet.value.cssRules);\\n      }\\n    );\\n  }\\n  function findThemeSheet(document2) {\\n    for (const sheet2 of document2.styleSheets) {\\n      if (sheet2?.ownerNode?.textContent.includes(\\\"--pinceau-mq\\\")) {\\n        return sheet2.ownerNode;\\n      }\\n    }\\n  }\\n  function resolveStylesheet() {\\n    const global = globalThis || window;\\n    if (global && global.document) {\\n      let sheetElement = document.querySelector(\\\"#pinceau-theme\\\");\\n      if (!sheetElement) {\\n        sheetElement = findThemeSheet(document);\\n      }\\n      sheet.value = sheetElement?.sheet;\\n      if (sheet.value) {\\n        hydrateStylesheet(sheet.value?.cssRules);\\n      }\\n    }\\n  }\\n  function hydrateStylesheet(cssRules) {\\n    cache = {};\\n    Object.entries(cssRules || {}).forEach(\\n      ([_, rule]) => {\\n        if (rule?.type !== 4 && !rule?.cssText?.includes(\\\"--pinceau-mq\\\")) {\\n          return false;\\n        }\\n        let currentTheme = \\\"initial\\\";\\n        rule.cssText.match(/--([\\\\w-]+)\\\\s*:\\\\s*(.+?);/gm)?.forEach((match) => {\\n          const [variable, value] = match.replace(\\\";\\\", \\\"\\\").split(/:\\\\s(.*)/s);\\n          if (variable === \\\"--pinceau-mq\\\") {\\n            currentTheme = value;\\n            if (!cache[value]) {\\n              const ruleReference = Object.entries(rule?.cssRules || {}).find(([_2, cssRule]) => cssRule?.cssText.includes(`--pinceau-mq: ${value}`))?.[1];\\n              if (ruleReference) {\\n                cache[value] = ruleReference;\\n              }\\n            }\\n            return;\\n          }\\n          const path = [...variable.substring(2).split(\\\"-\\\")];\\n          set(theme.value, path, getSetValue(path, value, variable, currentTheme));\\n        });\\n      }\\n    );\\n  }\\n  function updateTheme(value) {\\n    const mqKeys = Array.from(/* @__PURE__ */ new Set([\\\"dark\\\", \\\"light\\\", ...Object.keys(value?.media || {}), ...Object.keys(theme.value?.media || {})]));\\n    const config = normalizeConfig(value || {}, mqKeys, true);\\n    walkTokens(config, (token, _, paths) => updateToken(paths, token.value));\\n  }\\n  function updateToken(path, value, mq = \\\"initial\\\") {\\n    if (typeof value === \\\"object\\\") {\\n      Object.entries(value).forEach(([mq2, mqValue]) => updateToken(path, mqValue, mq2));\\n      return;\\n    }\\n    const varName = pathToVarName(path);\\n    if (!cache?.[mq]) {\\n      createMqRule(mq);\\n    }\\n    const resolvedValue = resolveReferences(void 0, value, [], { $tokens });\\n    set(\\n      theme.value,\\n      path,\\n      getSetValue(path, resolvedValue, varName, mq)\\n    );\\n    cache?.[mq]?.style.setProperty(varName, resolvedValue);\\n  }\\n  function reactiveToken(path) {\\n    return computed(\\n      {\\n        get() {\\n          return get(theme.value, `${path}.value`);\\n        },\\n        set(v) {\\n          updateToken(path, v);\\n        }\\n      }\\n    );\\n  }\\n  function getSetValue(path, value, variable, mq = \\\"initial\\\") {\\n    const setValue = { value, variable: `var(${variable})` };\\n    const existingValue = get(theme.value, path);\\n    if (existingValue && !variable.startsWith(\\\"--media\\\")) {\\n      if (typeof existingValue?.value === \\\"object\\\") {\\n        setValue.value = { ...existingValue.value, [mq]: value };\\n      } else {\\n        setValue.value = { initial: existingValue.value, [mq]: value };\\n      }\\n    }\\n    return setValue;\\n  }\\n  function createMqRule(mq) {\\n    if (cache?.[mq]) {\\n      return cache?.[mq];\\n    }\\n    const mqRule = resolveThemeRule(mq, \\\"\\\", theme.value, colorSchemeMode);\\n    const newRule = sheet.value.insertRule(mqRule, sheet.value.cssRules.length);\\n    cache[mq] = sheet.value.cssRules.item(newRule).cssRules[0];\\n    return cache[mq];\\n  }\\n  return {\\n    $tokens,\\n    updateToken,\\n    updateTheme,\\n    reactiveToken,\\n    resolveStylesheet,\\n    theme\\n  };\\n}\\n\\nfunction usePinceauComputedStyles(ids, computedStyles, sheet, loc) {\\n  let rule = sheet.hydratableRules?.[ids.value.uid]?.c;\\n  watch(\\n    () => computedStyles,\\n    (newComputedStyles) => {\\n      newComputedStyles = computedStylesToDeclaration(ids.value, newComputedStyles);\\n      rule = sheet.pushDeclaration(\\n        ids.value.uid,\\n        \\\"c\\\",\\n        newComputedStyles,\\n        rule,\\n        { ...loc, type: \\\"c\\\" }\\n      );\\n    },\\n    {\\n      immediate: !rule,\\n      deep: true\\n    }\\n  );\\n  onScopeDispose(() => rule && sheet.deleteRule(rule));\\n}\\nfunction computedStylesToDeclaration(ids, computedStyles) {\\n  const declaration = {};\\n  const targetId = `.${ids.uniqueClassName}${ids.componentId}`;\\n  if (computedStyles && Object.keys(computedStyles).length) {\\n    declaration[targetId] = declaration[targetId] || {};\\n    for (const [varName, _value] of Object.entries(computedStyles)) {\\n      const value = unref(_value);\\n      if (varName === \\\"css\\\") {\\n        declaration[targetId] = Object.assign(declaration[targetId], value);\\n        continue;\\n      }\\n      if (typeof value === \\\"object\\\") {\\n        for (const [mqId, mqPropValue] of Object.entries(value)) {\\n          const _value2 = unref(mqPropValue);\\n          if (!_value2) {\\n            continue;\\n          }\\n          if (mqId === \\\"initial\\\") {\\n            if (!declaration[targetId]) {\\n              declaration[targetId] = {};\\n            }\\n            if (!declaration[targetId]) {\\n              declaration[targetId] = {};\\n            }\\n            declaration[targetId][`--${varName}`] = _value2;\\n          }\\n          const mediaId = `@${mqId}`;\\n          if (!declaration[mediaId]) {\\n            declaration[mediaId] = {};\\n          }\\n          if (!declaration[mediaId][targetId]) {\\n            declaration[mediaId][targetId] = {};\\n          }\\n          declaration[mediaId][targetId][`--${kebabCase(varName)}`] = _value2;\\n        }\\n      } else {\\n        const _value2 = unref(value);\\n        if (_value2) {\\n          declaration[targetId][`--${kebabCase(varName)}`] = _value2;\\n        }\\n      }\\n    }\\n  }\\n  return declaration;\\n}\\n\\nconst usePinceauVariants = (ids, variants, props, sheet, classes, loc) => {\\n  let rule = sheet.hydratableRules?.[ids.value.uid]?.v;\\n  const variantsState = computed(() => variants ? resolveVariantsState(ids.value, props, variants) : {});\\n  const variantsClasses = ref([]);\\n  watch(\\n    variantsState,\\n    ({ cacheId, variantsProps }) => {\\n      let variantClass;\\n      if (sheet.cache[cacheId]) {\\n        const cachedRule = sheet.cache[cacheId];\\n        rule = cachedRule.rule;\\n        variantClass = cachedRule.variantClass;\\n        if (cachedRule?.classes) {\\n          variantsClasses.value = cachedRule.classes;\\n        }\\n        cachedRule.count++;\\n      } else {\\n        variantClass = `pv-${nanoid(6)}`;\\n        const { declaration, classes: classes2 } = variantsToDeclaration(variantClass, ids.value, variants, variantsProps);\\n        variantsClasses.value = classes2;\\n        rule = sheet.pushDeclaration(ids.value.uid, \\\"v\\\", declaration, void 0, { ...loc, type: \\\"v\\\" });\\n        sheet.cache[cacheId] = { rule, variantClass, classes: classes2, count: 1 };\\n      }\\n      classes.value.v = variantClass;\\n    },\\n    {\\n      immediate: true\\n    }\\n  );\\n  onScopeDispose(\\n    () => {\\n      const state = variantsState?.value;\\n      const cachedRule = sheet.cache?.[state.cacheId];\\n      if (cachedRule) {\\n        cachedRule.count--;\\n        if (cachedRule.count <= 0) {\\n          sheet.deleteRule(cachedRule.rule);\\n          delete sheet.cache[state.cacheId];\\n        }\\n      }\\n    }\\n  );\\n  return { variantsClasses };\\n};\\nfunction variantsToDeclaration(variantClass, ids, variants, props) {\\n  let classes = [];\\n  const declaration = {};\\n  if (props && Object.keys(props).length) {\\n    const targetId = `.${variantClass}`;\\n    for (const [propName, propValue] of Object.entries(props)) {\\n      if (typeof propValue === \\\"object\\\") {\\n        for (const [mqId, mqPropValue] of Object.entries(propValue)) {\\n          const _value = mqPropValue?.toString() || mqPropValue;\\n          const variantValue = variants[propName][_value];\\n          if (!variantValue) {\\n            continue;\\n          }\\n          if (!declaration[targetId]) {\\n            declaration[targetId] = {};\\n          }\\n          if (typeof variantValue === \\\"string\\\" || Array.isArray(variantValue) || variantValue?.$class) {\\n            const classAttr = typeof variantValue === \\\"string\\\" || Array.isArray(variantValue) ? variantValue : variantValue.$class;\\n            classes = [\\n              ...classes,\\n              ...typeof classAttr === \\\"string\\\" ? classAttr.split(\\\" \\\") : classAttr\\n            ];\\n            delete variantValue.$class;\\n          }\\n          if (mqId === \\\"initial\\\") {\\n            if (!declaration[targetId]) {\\n              declaration[targetId] = {};\\n            }\\n            declaration[targetId] = defu(declaration[targetId], variantValue);\\n          }\\n          const mediaId = `@${mqId}`;\\n          if (!declaration[mediaId]) {\\n            declaration[mediaId] = {};\\n          }\\n          if (!declaration[mediaId][targetId]) {\\n            declaration[mediaId][targetId] = {};\\n          }\\n          declaration[mediaId][targetId] = defu(declaration[mediaId][targetId], variantValue);\\n        }\\n      } else {\\n        const _value = propValue?.toString?.() || propValue;\\n        const variantValue = variants?.[propName]?.[_value];\\n        if (!variantValue) {\\n          continue;\\n        }\\n        if (!declaration[targetId]) {\\n          declaration[targetId] = {};\\n        }\\n        declaration[targetId] = defu(declaration[targetId], variantValue);\\n      }\\n    }\\n  }\\n  return { declaration, classes };\\n}\\nfunction resolveVariantsState(ids, props, variants) {\\n  if (!props || !variants) {\\n    return {};\\n  }\\n  let cacheId = ids.componentId;\\n  const variantsProps = Object.entries(props).reduce(\\n    (acc, [propName, propValue]) => {\\n      if (!variants[propName]) {\\n        return acc;\\n      }\\n      if (typeof propValue === \\\"object\\\") {\\n        Object.entries(propValue).forEach(([key, value]) => cacheId += `${propName}:${key}:${value}|`);\\n      } else {\\n        cacheId += `${propName}:${propValue}|`;\\n      }\\n      acc[propName] = propValue;\\n      return acc;\\n    },\\n    {}\\n  );\\n  return { cacheId, variantsProps };\\n}\\n\\nfunction usePinceauCssProp(ids, props, sheet, loc) {\\n  let rule = sheet.hydratableRules?.[ids.value.uid]?.p;\\n  const css = computed(() => props?.css);\\n  watch(\\n    css,\\n    (newCss) => {\\n      newCss = transformCssPropToDeclaration(ids.value, newCss);\\n      if (rule) {\\n        sheet.deleteRule(rule);\\n      }\\n      rule = sheet.pushDeclaration(\\n        ids.value.uid,\\n        \\\"p\\\",\\n        newCss,\\n        rule,\\n        { ...loc, type: \\\"c\\\" }\\n      );\\n    },\\n    {\\n      immediate: !rule\\n    }\\n  );\\n  onScopeDispose(() => rule && sheet.deleteRule(rule));\\n}\\nfunction transformCssPropToDeclaration(ids, css) {\\n  const declaration = {};\\n  if (css) {\\n    const targetId = `.${ids.uniqueClassName}${ids.componentId}`;\\n    declaration[targetId] = Object.assign(declaration[targetId] || {}, css);\\n  }\\n  return declaration;\\n}\\n\\nconst defaultRuntimeOptions = {\\n  theme: {},\\n  utils: {},\\n  tokensHelperConfig: {},\\n  multiApp: false,\\n  colorSchemeMode: \\\"media\\\",\\n  dev: process.env.NODE_ENV !== \\\"production\\\"\\n};\\nconst plugin = {\\n  install(app, options) {\\n    options = Object.assign(defaultRuntimeOptions, options);\\n    const { theme, tokensHelperConfig, dev, multiApp, colorSchemeMode, utils } = options;\\n    const themeSheet = usePinceauThemeSheet(theme, tokensHelperConfig, colorSchemeMode);\\n    if (dev && (import.meta.hot || process.server)) {\\n      import('./chunks/debug.mjs').then(({ usePinceauRuntimeDebug }) => usePinceauRuntimeDebug(tokensHelperConfig));\\n    }\\n    const multiAppId = multiApp ? nanoid(6) : void 0;\\n    const runtimeSheet = usePinceauRuntimeSheet(themeSheet.$tokens, utils, colorSchemeMode, multiAppId);\\n    function usePinceauRuntime(props = {}, variants, computedStyles) {\\n      const instance = getCurrentInstance();\\n      let loc;\\n      if (dev && (import.meta.hot || process.server)) {\\n        const { __file: file, __name: name } = instance.vnode.type;\\n        loc = { file, name };\\n      }\\n      const classes = ref({\\n        // Variants class\\n        v: \\\"\\\",\\n        // Unique class\\n        c: \\\"\\\"\\n      });\\n      const ids = usePinceauRuntimeIds(instance, classes);\\n      if (computedStyles && Object.keys(computedStyles).length > 0) {\\n        usePinceauComputedStyles(ids, computedStyles, runtimeSheet, loc);\\n      }\\n      let dynamicVariantClasses;\\n      if (variants && Object.keys(variants).length > 0) {\\n        const { variantsClasses } = usePinceauVariants(ids, variants, props, runtimeSheet, classes, loc);\\n        dynamicVariantClasses = variantsClasses;\\n      }\\n      if (props?.css && Object.keys(props?.css).length > 0) {\\n        usePinceauCssProp(ids, props, runtimeSheet, loc);\\n      }\\n      return { $pinceau: computed(() => [classes.value.v, classes.value.c, dynamicVariantClasses?.value?.join(\\\" \\\")].join(\\\" \\\")) };\\n    }\\n    app.config.globalProperties.$pinceauRuntime = usePinceauRuntime;\\n    app.config.globalProperties.$pinceauTheme = themeSheet;\\n    app.config.globalProperties.$pinceauSsr = { get: () => runtimeSheet.toString() };\\n    app.provide(\\\"pinceauRuntime\\\", usePinceauRuntime);\\n    app.provide(\\\"pinceauTheme\\\", themeSheet);\\n  }\\n};\\n\\nfunction usePinceauRuntime(props, variants, computedStyles) {\\n  return inject(\\\"pinceauRuntime\\\")(props, variants, computedStyles);\\n}\\nfunction usePinceauTheme() {\\n  return inject(\\\"pinceauTheme\\\");\\n}\\nconst cssProp = {\\n  type: Object,\\n  required: false,\\n  default: {}\\n};\\nfunction computedStyle(defaultValue, required = false) {\\n  return {\\n    type: [String, Object],\\n    default: defaultValue,\\n    required\\n  };\\n}\\n\\nexport { computedStyle, createTokensHelper, cssProp, plugin, resolveCssProperty, stringify, usePinceauRuntime, usePinceauTheme };\\n\"],\n  \"mappings\": \"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\",\n  \"names\": [\"usePinceauRuntime\"]\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1708178212177,
      "end": 1708178212177,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1708178212177,
      "end": 1708178212177,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1708178212177,
      "end": 1708178212177,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1708178212177,
      "end": 1708178212177,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1708178212177,
      "end": 1708178212177,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1708178212177,
      "end": 1708178212177,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1708178212177,
      "end": 1708178212177,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708178212177,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1708178212177,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708178212178,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1708178212178,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708178212178,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1708178212178,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708178212178,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1708178212178,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1708178212178,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1708178212178,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1708178212178,
      "end": 1708178212178,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1708178212178,
      "end": 1708178212178,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1708178212179,
      "end": 1708178212179,
      "order": "normal"
    }
  ]
}
